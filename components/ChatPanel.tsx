'use client'

import { useState, useRef, useEffect, useCallback } from 'react'
import { useRouter } from 'next/navigation'
import { useSession } from 'next-auth/react'
import { Send, Loader2, Globe, Target, X } from 'lucide-react'
import { useStore } from '@/lib/store'
import { motion } from 'framer-motion'
import { generateContent, generateHTML, getPromptForAction } from '@/lib/api'
import { parseAIResponse, convertToPriceItems } from '@/lib/jsonParser'
import type { ParsedProposalData, ParsedInvoiceData } from '@/lib/jsonParser'
import { applyAIEdit, isEditCommand } from '@/lib/aiEditor'
import { countNewImagePlaceholders } from '@/lib/imageRegeneration'
import { generateDocumentWithMode } from '@/lib/agents/orchestrator'
import { fetchWithTimeout } from '@/lib/fetchWithTimeout'
import { processPlanningMode, processSmartDialogMode, formatPlanForGeneration } from '@/lib/agents/planningAgent'
import { processConversationalPlanning, formatConversationalPlan } from '@/lib/agents/conversationalPlanner'
import { saveHTMLPreview } from '@/lib/storage/indexedDB'
import { recognizeIntent, extractQuantity } from '@/lib/intentRecognition'
import ProjectSelector from './ProjectSelector'
import FileUploader from './FileUploader'
import WebsiteModal from './WebsiteModal'
import WebsiteActionModal from './WebsiteActionModal'
import ModeSwitcher from './ModeSwitcher'
import InlinePlanningCard from './InlinePlanningCard'
import FreeGenerationsLimitModal from './FreeGenerationsLimitModal'
import GuestDemoCompleteModal from './GuestDemoCompleteModal'

export default function ChatPanel() {
  const router = useRouter()
  const { data: session } = useSession()
  const {
    messages,
    addMessage,
    setHtmlPreview,
    htmlPreview,
    docType,
    styleConfig,
    priceItems,
    addGeneratedFile,
    setActiveTab,
    setPriceItems,
    uploadedImages,
    selectedElement,
    setSelectedElement,
    parsedWebsiteData,
    setParsedWebsiteData,
    clearParsedWebsiteData,
    appMode,
    lastGeneratedContent,
    setLastGeneratedContent,
    lastGeneratedImages,
    setLastGeneratedImages,
    setGeneratedImagesForExport,
    workMode,
    setWorkMode,
    planningData,
    setPlanningData,
    resetPlanningData,
    getCurrentProject,
    isGuestMode,
    freeGenerationsRemaining,
    consumeFreeGeneration
  } = useStore()
  const [input, setInput] = useState('')
  const [loading, setLoading] = useState(false)
  const [isWebModalOpen, setIsWebModalOpen] = useState(false)
  const [isParsingWebsite, setIsParsingWebsite] = useState(false)
  const [websiteActionModalOpen, setWebsiteActionModalOpen] = useState(false)
  const [pendingWebsiteUrl, setPendingWebsiteUrl] = useState('')
  const [pendingWebsiteData, setPendingWebsiteData] = useState<any>(null)
  const [showLimitModal, setShowLimitModal] = useState(false)
  const [showGuestDemoModal, setShowGuestDemoModal] = useState(false)
  const isGeneratingRef = useRef(false)
  const messagesEndRef = useRef<HTMLDivElement>(null)
  const inputRef = useRef<HTMLInputElement>(null)
  const abortControllerRef = useRef<AbortController | null>(null)
  const shownProgressMessages = useRef<Set<string>>(new Set())
  const hasTriggeredAutoGen = useRef(false)
  const lastAutoGenTimestamp = useRef<number>(0)
  const guestGenerationCompleted = useRef(false)

  useEffect(() => {
    if (messagesEndRef.current) {
      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })
    }
  }, [messages])
  
  // Auto-generation function (called from welcome page)
  const triggerGeneration = useCallback(async (userMsg: string) => {
    // DOUBLE-CHECK: Prevent triggering if already in progress
    if (isGeneratingRef.current || loading) {
      console.warn('‚ö†Ô∏è Generation already in progress, ignoring trigger')
      return
    }

    console.log('‚ö° Triggering generation with:', userMsg)

    // Set input and trigger Run button click after state update
    setInput(userMsg)

    // Small delay to ensure state updates
    setTimeout(() => {
      // CRITICAL: Check again before clicking - prevent race condition
      if (isGeneratingRef.current || loading) {
        console.warn('‚ö†Ô∏è Generation started during delay, skipping button click')
        return
      }

      const runButton = document.querySelector('[data-auto-run="true"]') as HTMLButtonElement
      if (runButton) {
        // FINAL CHECK: Only click if button would call handleRun, not handleStop
        const buttonWouldStop = runButton.textContent?.includes('–°—Ç–æ–ø') || runButton.textContent?.includes('Stop')
        if (buttonWouldStop) {
          console.warn('‚ö†Ô∏è Button would stop generation, skipping click')
          return
        }

        console.log('üéØ Programmatically clicking Run button')
        runButton.click()
      } else {
        console.error('‚ùå Run button not found!')
      }
    }, 150)
  }, [loading])
  
  // Listen for auto-generation trigger from welcome page
  useEffect(() => {
    const handleAutoGeneration = (event: Event) => {
      // ULTRA-CRITICAL: Use timestamp to prevent ANY race condition
      const now = Date.now()
      const timeSinceLastTrigger = now - lastAutoGenTimestamp.current

      // Ignore if triggered within 2 seconds (definitely a duplicate)
      if (timeSinceLastTrigger < 2000) {
        console.log(`‚è≠Ô∏è Auto-generation recently triggered (${timeSinceLastTrigger}ms ago), ignoring duplicate`)
        return
      }

      // ATOMIC: Check and set flag in one operation
      if (hasTriggeredAutoGen.current === true) {
        console.log('‚è≠Ô∏è Auto-generation already triggered (flag check), ignoring')
        return
      }

      // IMMEDIATELY set both flag and timestamp
      hasTriggeredAutoGen.current = true
      lastAutoGenTimestamp.current = now

      const customEvent = event as CustomEvent
      const prompt = customEvent.detail?.prompt

      console.log('üéØ Auto-generation event received!', {
        prompt,
        isGenerating: isGeneratingRef.current,
        loading,
        timeSinceLastTrigger
      })

      if (!prompt || isGeneratingRef.current || loading) {
        console.log('‚ö†Ô∏è Cannot auto-generate:', {
          hasPrompt: !!prompt,
          isGenerating: isGeneratingRef.current,
          loading
        })
        // Reset flag if we can't proceed
        hasTriggeredAutoGen.current = false
        return
      }

      console.log('üöÄ Auto-generating from welcome page...')
      console.log('üìù Prompt:', prompt)

      // Delay for UI stability
      setTimeout(() => {
        // Final check before triggering
        if (!isGeneratingRef.current && !loading) {
          triggerGeneration(prompt.trim())
        } else {
          console.warn('‚ö†Ô∏è Generation state changed, skipping auto-trigger')
        }
      }, 500)
    }

    // CRITICAL: Check if listener already exists to prevent duplicates
    const listenerExists = (window as any).__autoGenerationListenerAdded
    if (listenerExists) {
      console.log('üîí Auto-generation listener already exists, skipping duplicate')
      return
    }

    // Mark that we've added the listener
    (window as any).__autoGenerationListenerAdded = true

    // Use { once: true } for automatic removal after first trigger
    window.addEventListener('trigger-auto-generation', handleAutoGeneration, { once: true })

    return () => {
      window.removeEventListener('trigger-auto-generation', handleAutoGeneration)
      // Clean up the marker
      delete (window as any).__autoGenerationListenerAdded
    }
  }, [loading, triggerGeneration])

  const handlePlanningCardSubmit = (selectedQuestions: string[], pageCount?: number, imageCount?: number, mode?: 'batch' | 'sequential') => {
    setPlanningData({
      selectedQuestions,
      pageCount,
      imageCount,
      answerMode: mode || null,
      currentQuestionIndex: 0,
      collectedAnswers: {}
    })
    
    if (mode === 'sequential' && selectedQuestions.length > 0) {
      addMessage({
        role: 'assistant',
        content: `üìã –û—Ç–ª–∏—á–Ω–æ! –Ø –∑–∞–¥–∞–º –≤–∞–º ${selectedQuestions.length} ${selectedQuestions.length === 1 ? '–≤–æ–ø—Ä–æ—Å' : selectedQuestions.length < 5 ? '–≤–æ–ø—Ä–æ—Å–∞' : '–≤–æ–ø—Ä–æ—Å–æ–≤'}.\n\n–í–æ–ø—Ä–æ—Å 1/${selectedQuestions.length}:\n\n‚ùì ${selectedQuestions[0]}`
      })
    } else if (mode === 'batch' && selectedQuestions.length > 0) {
      const questionsList = selectedQuestions.map((q, i) => `${i + 1}. ${q}`).join('\n')
      addMessage({
        role: 'assistant',
        content: `üìã –û—Ç–ª–∏—á–Ω–æ! –í–æ—Ç –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –≤—ã–±—Ä–∞–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å:\n\n${questionsList}\n\nüí¨ –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ (–º–æ–∂–Ω–æ –∫—Ä–∞—Ç–∫–æ –ø–æ –∫–∞–∂–¥–æ–º—É –ø—É–Ω–∫—Ç—É).`
      })
    }
  }

  const handlePlanningCardSkip = () => {
    addMessage({
      role: 'assistant',
      content: 'üëå –ü–æ–Ω—è–ª! –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–≤–æ–±–æ–¥–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ. –ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å, –∏ —è –ø–æ–º–æ–≥—É –≤–∞–º.'
    })
  }

  const handleWebsiteParse = async (url: string) => {
    setIsParsingWebsite(true)
    
    addMessage({
      role: 'user',
      content: `üåê –ü–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–∞: ${url}`
    })
    
    addMessage({
      role: 'assistant',
      content: 'üîÑ –û—Ç–∫—Ä—ã–≤–∞—é —Å–∞–π—Ç –∏ –∏–∑–≤–ª–µ–∫–∞—é –∫–æ–Ω—Ç–µ–Ω—Ç...'
    })

    try {
      const response = await fetchWithTimeout('/api/parse-website', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ url }),
      }, 90000)

      if (!response.ok) {
        throw new Error('Failed to parse website')
      }

      const data = await response.json()
      
      setPendingWebsiteUrl(url)
      setPendingWebsiteData(data)
      setWebsiteActionModalOpen(true)
      setIsParsingWebsite(false)
      setIsWebModalOpen(false)
    } catch (error) {
      console.error('Website parsing error:', error)
      addMessage({
        role: 'assistant',
        content: `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —Å–∞–π—Ç–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`
      })
    } finally {
      setIsParsingWebsite(false)
    }
  }

  const handleWebsiteAction = (action: 'copy-design' | 'content-only' | 'style-only') => {
    if (!pendingWebsiteData) return
    
    const content = [
      ...pendingWebsiteData.headings.h1,
      ...pendingWebsiteData.headings.h2.slice(0, 5),
      ...pendingWebsiteData.paragraphs.slice(0, 10)
    ].filter(Boolean).join('\n\n')
    
    const websiteData = {
      url: pendingWebsiteData.url,
      title: pendingWebsiteData.title,
      description: pendingWebsiteData.description || '',
      headings: pendingWebsiteData.headings,
      paragraphs: pendingWebsiteData.paragraphs,
      images: pendingWebsiteData.images,
      content: content,
      actionType: action
    }
    
    setParsedWebsiteData(websiteData)
    
    if (action === 'copy-design') {
      addMessage({
        role: 'assistant',
        content: `‚úÖ –°–∞–π—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è!\n\nüìã –ù–∞–π–¥–µ–Ω–æ:\n- ${pendingWebsiteData.headings.h1.length} –≥–ª–∞–≤–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤\n- ${pendingWebsiteData.paragraphs.length} –∞–±–∑–∞—Ü–µ–≤ —Ç–µ–∫—Å—Ç–∞\n- ${pendingWebsiteData.images.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n\nüí° –°–∫–∞–∂–∏—Ç–µ –∫–∞–∫–æ–π —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å–æ–∑–¥–∞—Ç—å (–∫–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞, –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –∏ —Ç.–¥.) - —è –ø–æ–≤—Ç–æ—Ä—é –¥–∏–∑–∞–π–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω–æ!`
      })
    } else if (action === 'content-only') {
      addMessage({
        role: 'assistant',
        content: `‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –∏–∑–≤–ª–µ—á—ë–Ω! –ü—Ä–∏–º–µ–Ω—é —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω.\n\nüìù –ß—Ç–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ:\n- –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∏ —Ç–µ–∫—Å—Ç\n- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n\nüé® –°–∫–∞–∂–∏—Ç–µ –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç —Å–æ–∑–¥–∞—Ç—å - –ø—Ä–∏–º–µ–Ω—é —Å–≤–æ–π —Å—Ç–∏–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –∫ —ç—Ç–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É!`
      })
    } else {
      addMessage({
        role: 'assistant',
        content: `‚úÖ –°—Ç–∏–ª—å —Å–∞–π—Ç–∞ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!\n\nüé® AI –∏–∑–≤–ª—ë–∫ —Ü–≤–µ—Ç–æ–≤—É—é —Å—Ö–µ–º—É –∏ –≤–∏–∑—É–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å.\n\nüí° –¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –Ω–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ - –ø—Ä–∏–º–µ–Ω—é —Å—Ç–∏–ª—å —Å —Å–∞–π—Ç–∞!`
      })
    }
    
    setWebsiteActionModalOpen(false)
    setPendingWebsiteUrl('')
    setPendingWebsiteData(null)
  }

  const handleStop = () => {
    console.log('üõë Stop button clicked')

    if (abortControllerRef.current) {
      abortControllerRef.current.abort()
      console.log('‚úÖ Generation aborted')
    }

    setLoading(false)
    isGeneratingRef.current = false

    // Don't add stop message to chat - user can see generation stopped

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    setTimeout(() => {
      inputRef.current?.focus()
    }, 100)
  }

  const handleRun = async () => {
    console.log('üîµ handleRun called')
    console.log('  üìù input:', input)
    console.log('  ‚è≥ loading:', loading)
    console.log('  üîí isGeneratingRef:', isGeneratingRef.current)
    console.log('  üõ†Ô∏è workMode:', workMode)

    if (!input.trim() || loading) {
      console.log('‚ùå handleRun blocked:', {
        noInput: !input.trim(),
        loading
      })
      return
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥—ã "—Å—Ç–æ–π" –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–µ–∫—É—â–µ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    const stopCommands = ['—Å—Ç–æ–π', 'stop', '–æ—Å—Ç–∞–Ω–æ–≤–∏—Å—å', '–æ—Å—Ç–∞–Ω–æ–≤–∏', '–ø—Ä–µ–∫—Ä–∞—Ç–∏']
    if (stopCommands.some(cmd => input.trim().toLowerCase() === cmd)) {
      console.log('üõë Stop command detected:', input.trim())
      setInput('')
      handleStop()
      return
    }

    // üîí GUEST MODE RESTRICTION: Block new prompts after first generation
    // Check if guest has already generated a document (htmlPreview exists)
    const hasGeneratedDocument = htmlPreview && htmlPreview.trim().length > 0
    if (isGuestMode && hasGeneratedDocument) {
      console.log('üîí Guest mode: blocking new prompt after first generation')
      addMessage({
        role: 'assistant',
        content: 'üîí –î–µ–º–æ-—Ä–µ–∂–∏–º –∑–∞–≤–µ—Ä—à–µ–Ω!\n\nüëâ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.'
      })
      setInput('')
      isGeneratingRef.current = false
      return
    }

    // üéÅ FREE MODE RESTRICTION: Check free generations limit
    if (!isGuestMode && appMode === 'free') {
      if (freeGenerationsRemaining <= 0) {
        console.log('üîí Free mode: no generations remaining')
        setShowLimitModal(true)
        setInput('')
        return
      }
    }

    // Set generating flag IMMEDIATELY to prevent race conditions
    if (isGeneratingRef.current) {
      console.log('‚ùå handleRun blocked: generation already in progress')
      return
    }
    isGeneratingRef.current = true

    // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π AbortController –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
    abortControllerRef.current = new AbortController()
    console.log('‚úÖ AbortController created')
    
    // Check generation limits
    const intent = recognizeIntent(input.trim(), docType)
    const isCreationRequest = intent.action === 'create'

    // GUEST MODE: Allow ONE demo generation with images
    // The check for existing htmlPreview is already done above (line 326)
    
    console.log('‚úÖ handleRun proceeding with generation')
    
    // Clear progress messages tracker for new generation
    shownProgressMessages.current.clear()
    
    const userMsg = input.trim()
    
    // Check if this message is already in the chat (auto-generation from welcome)
    const lastMessage = messages?.[messages?.length - 1]
    const isDuplicate = lastMessage?.role === 'user' && lastMessage?.content === userMsg
    
    if (!isDuplicate) {
      console.log('‚ûï Adding user message to chat')
      addMessage({ role: 'user', content: userMsg })
    } else {
      console.log('üìã Message already in chat, skipping duplicate')
    }
    
    setInput('')
    setLoading(true)

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ—Å–ª–µ –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏
    setTimeout(() => {
      inputRef.current?.focus()
    }, 100)

    try {
      console.log('üîÑ Checking workMode:', workMode)
      if (workMode === 'plan') {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º conversational planning - —É–º–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        console.log('üí¨ Using conversational planning mode')
        
        const result = await processConversationalPlanning(
          userMsg, 
          docType, 
          planningData, 
          messages, // –ü–µ—Ä–µ–¥–∞–µ–º –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞!
          appMode
        )
        
        addMessage({ role: 'assistant', content: result.response })
        
        if (Object.keys(result.updatedData).length > 0) {
          setPlanningData(result.updatedData)
        }
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ Build –∫–æ–≥–¥–∞ –ø–ª–∞–Ω –≥–æ—Ç–æ–≤
        if (result.shouldSwitchToBuild) {
          console.log('üöÄ Plan ready, switching to Build mode')
          // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–π preview —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
          setHtmlPreview('')
          setTimeout(() => {
            setWorkMode('build')
            addMessage({
              role: 'assistant',
              content: '‚ú® –û—Ç–ª–∏—á–Ω–æ! –ü–µ—Ä–µ–∫–ª—é—á–∞—é—Å—å –Ω–∞ —Ä–µ–∂–∏–º Build. –ù–∞–ø–∏—à–∏—Ç–µ "—Å–æ–∑–¥–∞–π" –∏–ª–∏ "–¥–µ–ª–∞–π" –¥–ª—è –Ω–∞—á–∞–ª–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.'
            })
          }, 1500)
        }
        
        setLoading(false)
        isGeneratingRef.current = false

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ—Å–ª–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        setTimeout(() => {
          inputRef.current?.focus()
        }, 100)

        return
      }
      
      console.log('‚úÖ Not in plan mode, proceeding with build mode')
      
      const isDocumentCreationFromWebsite = parsedWebsiteData && (
        userMsg.toLowerCase().includes('—Å–æ–∑–¥–∞–π') ||
        userMsg.toLowerCase().includes('—Å–¥–µ–ª–∞–π') ||
        userMsg.toLowerCase().includes('–∫–ø') ||
        userMsg.toLowerCase().includes('–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é') ||
        userMsg.toLowerCase().includes('–ø–∏—Å—å–º–æ') ||
        userMsg.toLowerCase().includes('–¥–æ–∫—É–º–µ–Ω—Ç')
      )
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –Ω–∞–º–µ—Ä–µ–Ω–∏–π
      const intent = recognizeIntent(userMsg, docType)
      const isCreationRequest = intent.action === 'create'
      
      // –í–ê–ñ–ù–û: –ï—Å–ª–∏ –µ—Å—Ç—å –≥–æ—Ç–æ–≤—ã–π –ø–ª–∞–Ω –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç "–¥–µ–ª–∞–π/—Å–æ–∑–¥–∞–π", —ç—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
      const hasPlanData = planningData.isComplete || planningData.theme || planningData.targetAudience
      const isStartGenerationCommand = hasPlanData && (
        userMsg.toLowerCase().includes('–¥–µ–ª–∞–π') || 
        userMsg.toLowerCase().includes('—Å–æ–∑–¥–∞–π') ||
        userMsg.toLowerCase().includes('–Ω–∞—á–∏–Ω–∞–π') ||
        userMsg.toLowerCase().includes('–≥–µ–Ω–µ—Ä–∏—Ä—É–π')
      )
      
      const isEdit = htmlPreview && !isDocumentCreationFromWebsite && !isCreationRequest && !isStartGenerationCommand
      console.log(`üîç Intent: ${intent.action}, quantity: ${intent.quantity || 'N/A'}, subject: ${intent.subject || 'N/A'}`)
      console.log(`üîç Is edit mode: ${isEdit} (has preview: ${!!htmlPreview}, creation request: ${isCreationRequest})`)
      console.log(`üìù User message: "${userMsg}"`)
      
      if (isEdit) {
        console.log('üîß Edit mode activated!')
        if (selectedElement) {
          console.log('üéØ Selected element:', {
            selector: selectedElement.selector,
            parentSelector: selectedElement.parentSelector,
            parentContext: selectedElement.parentContext,
            contentLength: selectedElement.outerHTML?.length || selectedElement.innerHTML.length
          })
        }
        
        let editMessage = '‚úèÔ∏è –í–Ω–æ—à—É –∏–∑–º–µ–Ω–µ–Ω–∏—è'
        if (selectedElement) {
          editMessage += ' –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç'
        }
        addMessage({ role: 'assistant', content: editMessage + '...' })
        
        try {
          // Map guest mode to advanced for editing capabilities
          const editMode: 'free' | 'advanced' | 'pro' = appMode === 'guest' ? 'advanced' : (appMode as 'free' | 'advanced' | 'pro')
          const editResult = await applyAIEdit(htmlPreview, userMsg, selectedElement, editMode)
          console.log('‚úÖ AI edit successful, HTML length:', editResult.html.length)
          console.log(`üîß Contextual edit: ${editResult.isContextual}, selector: ${editResult.selector || 'N/A'}`)
          
          let finalHtml = editResult.html
          
          // üîß –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - –∑–∞–º–µ–Ω—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ –ø–æ–ª–Ω–æ–º HTML
          if (editResult.isContextual && editResult.selector) {
            console.log(`üîß Replacing element ${editResult.selector} in full HTML...`)
            
            try {
              // –ò—Å–ø–æ–ª—å–∑—É–µ–º DOMParser –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∑–∞–º–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç–∞
              const parser = new DOMParser()
              const doc = parser.parseFromString(htmlPreview, 'text/html')
              const element = doc.querySelector(editResult.selector)
              
              if (element) {
                element.outerHTML = editResult.html
                finalHtml = '<!DOCTYPE html>\n' + doc.documentElement.outerHTML
                console.log(`‚úÖ Element ${editResult.selector} replaced successfully`)
              } else {
                console.warn(`‚ö†Ô∏è Element ${editResult.selector} not found, using edited HTML as-is`)
                finalHtml = editResult.html
              }
            } catch (domError) {
              console.error('‚ùå DOM replacement failed:', domError)
              finalHtml = editResult.html
            }
          }
          
          // üí∞ –ü–†–û–í–ï–†–ö–ê –ù–û–í–´–• –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –ò –°–ü–ò–°–ê–ù–ò–ï –ì–ï–ù–ï–†–ê–¶–ò–ô
          const newImageCount = countNewImagePlaceholders(htmlPreview, finalHtml)

          if (newImageCount > 0 && session && !isGuestMode) {
            const generationCost = newImageCount * 0.1
            console.log(`üí∞ New images detected: ${newImageCount}, cost: ${generationCost} generations`)

            try {
              const consumeResponse = await fetch('/api/user/consume-generation-fractional', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                  amount: generationCost,
                  reason: `Image regeneration (${newImageCount} images)`
                })
              })

              if (!consumeResponse.ok) {
                const error = await consumeResponse.json()
                addMessage({
                  role: 'assistant',
                  content: `‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è ${newImageCount} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –¢—Ä–µ–±—É–µ—Ç—Å—è ${generationCost} –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.`
                })
                isGeneratingRef.current = false
                return
              }

              const consumeData = await consumeResponse.json()
              console.log(`‚úÖ Consumed ${consumeData.consumed} generations, remaining: ${consumeData.remainingGenerations}`)
              addMessage({
                role: 'assistant',
                content: `üí∞ –°–ø–∏—Å–∞–Ω–æ ${generationCost} –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞ ${newImageCount} ${newImageCount === 1 ? '–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ' : '–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π'}`
              })
            } catch (error) {
              console.error('‚ùå Failed to consume generations:', error)
              addMessage({
                role: 'assistant',
                content: `‚ùå –û—à–∏–±–∫–∞ —Å–ø–∏—Å–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`
              })
              isGeneratingRef.current = false
              return
            }
          }

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
          if (finalHtml.includes('IMAGE_PLACEHOLDER')) {
            console.log('üñºÔ∏è Detected IMAGE_PLACEHOLDER, checking for uploaded images...')
            
            // üîç –ù–û–í–û–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å actionType='use-as-is'
            const imageToInsert = uploadedImages.find(img => img.actionType === 'use-as-is')
            
            if (imageToInsert) {
              // –í—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –∫–∞–∫ –µ—Å—Ç—å
              addMessage({ 
                role: 'assistant', 
                content: `‚úÖ –í—Å—Ç–∞–≤–ª—è—é –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ "${imageToInsert.name}"` 
              })
              
              // –ó–∞–º–µ–Ω—è–µ–º IMAGE_PLACEHOLDER –Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
              finalHtml = finalHtml.replace(/IMAGE_PLACEHOLDER/g, imageToInsert.base64)
              
              setHtmlPreview(finalHtml)
              const project = getCurrentProject()
              if (project) {
                const storageKey = `${project.id}-${docType}`
                await saveHTMLPreview(storageKey, finalHtml)
              }
              
              addMessage({
                role: 'assistant',
                content: `‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ "${imageToInsert.name}" –≤—Å—Ç–∞–≤–ª–µ–Ω–æ!`
              })
            } else {
              // –ù–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ AI
              console.log('üñºÔ∏è No uploaded images, generating with AI...')
              
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Ç–µ–∫—É—â–µ–º —Ä–µ–∂–∏–º–µ
              const { MODE_CONFIG } = await import('@/lib/config/modes')
              const modeConfig = MODE_CONFIG[appMode]
              
              if (!modeConfig.features.aiImageGeneration) {
                // –í –±–µ—Å–ø–ª–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
                addMessage({
                  role: 'assistant',
                  content: '‚ö†Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã, –Ω–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–º (ADVANCED) —Ä–µ–∂–∏–º–µ. –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –Ω–∞ –¥—Ä—É–≥–æ–π —Ä–µ–∂–∏–º –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.'
                })
                // –û—Å—Ç–∞–≤–ª—è–µ–º placeholder –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              } else {
                addMessage({ 
                  role: 'assistant', 
                  content: 'üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏...' 
                })
              
              try {
                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (Flux 1.1 Pro –¥–ª—è ADVANCED, Flux Schnell –¥–ª—è FREE)
                const { generateImagesFromPlan } = await import('@/lib/agents/imageAgent')
                
                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
                const lowerMsg = userMsg.toLowerCase()
                let imageType: 'product' | 'logo' | 'illustration' | 'hero' | 'background' = 'product'
                if (lowerMsg.includes('–ª–æ–≥–æ—Ç–∏–ø') || lowerMsg.includes('logo')) {
                  imageType = 'logo'
                } else if (lowerMsg.includes('—Ñ–æ–Ω') || lowerMsg.includes('background')) {
                  imageType = 'background'
                } else if (lowerMsg.includes('–∏–ª–ª—é—Å—Ç—Ä–∞—Ü')) {
                  imageType = 'illustration'
                }
                
                // –£–ª—É—á—à–∞–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏, –∏–∑–≤–ª–µ–∫–∞—è –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
                let enhancedPrompt = userMsg
                // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —Å–ª–æ–≤–∞
                enhancedPrompt = enhancedPrompt.replace(/–≤—Å—Ç–∞–≤—å|–¥–æ–±–∞–≤—å|—Å—é–¥–∞|—Ç—É–¥–∞|–∑–¥–µ—Å—å|–∑–∞–º–µ–Ω–∏|—ç—Ç–æ|—Ñ–æ—Ç–æ|–Ω–∞/gi, '').trim()
                if (!enhancedPrompt) {
                  enhancedPrompt = 'professional high quality image'
                }
                
                // üåç –ï—Å–ª–∏ –ø—Ä–æ–º–ø—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º - –ø–µ—Ä–µ–≤–æ–¥–∏–º —á–µ—Ä–µ–∑ GPT-4o –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è Flux
                if (/[–∞-—è—ë]/i.test(enhancedPrompt)) {
                  console.log(`üåç Translating Russian prompt to English: "${enhancedPrompt}"`)
                  
                  try {
                    const translateResponse = await fetchWithTimeout('/api/openrouter-chat', {
                      method: 'POST',
                      headers: { 'Content-Type': 'application/json' },
                      body: JSON.stringify({
                        messages: [{
                          role: 'user',
                          content: `Convert this to a detailed English image generation prompt for Flux Schnell AI model:

"${enhancedPrompt}"

Requirements:
- Focus on the main subject/object described
- Add details for professional/product photography style
- Keep it concise (max 80 words)
- Optimize for realistic image generation
- Include relevant photography terms (e.g., "close-up", "studio lighting", "clean background")

Output ONLY the English prompt, nothing else. No quotes, no explanations.`
                        }],
                        model: 'openai/gpt-4o',
                        temperature: 0.3
                      }),
                    }, 30000) // 30 sec timeout for translation
                    
                    if (translateResponse.ok) {
                      const data = await translateResponse.json()
                      const translatedPrompt = data.content.trim().replace(/^["']|["']$/g, '')
                      console.log(`‚úÖ Translated to: "${translatedPrompt}"`)
                      enhancedPrompt = translatedPrompt
                    } else {
                      console.warn('‚ö†Ô∏è Translation failed, using original prompt')
                    }
                  } catch (translateError) {
                    console.warn('‚ö†Ô∏è Translation error:', translateError)
                    // Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç
                  }
                }
                
                enhancedPrompt += '. Professional, high quality, modern style, clean background'
                
                console.log(`üé® Generating image with prompt: "${enhancedPrompt}"`)
                
                const imagePlan = [{
                  type: imageType,
                  prompt: enhancedPrompt,
                  reasoning: `User requested to add image: ${userMsg}`,
                  slot: 0
                }]
                
                let generatedImages
                
                // –í—ã–±–∏—Ä–∞–µ–º –º–æ–¥–µ–ª—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
                const imageModel = appMode === 'advanced'
                  ? 'black-forest-labs/flux-1.1-pro'  // ADVANCED: Flux 1.1 Pro (–ª—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ)
                  : 'black-forest-labs/flux-schnell'   // FREE: Flux Schnell (–±—ã—Å—Ç—Ä–æ –∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ)
                
                // –¢–∞–π–º–∞—É—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (60 —Å–µ–∫—É–Ω–¥)
                const imagePromise = generateImagesFromPlan(imagePlan, undefined, imageModel)
                
                const timeoutPromise = new Promise<never>((_, reject) => 
                  setTimeout(() => reject(new Error('Image generation timeout')), 60000)
                )
                
                generatedImages = await Promise.race([imagePromise, timeoutPromise])
                
                if (generatedImages && generatedImages.length > 0) {
                  // –ó–∞–º–µ–Ω—è–µ–º IMAGE_PLACEHOLDER –Ω–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                  finalHtml = finalHtml.replace(/IMAGE_PLACEHOLDER/g, generatedImages[0].dataUrl)
                  console.log('‚úÖ Image generated and inserted')
                  addMessage({ 
                    role: 'assistant', 
                    content: '‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∏ –≤—Å—Ç–∞–≤–ª–µ–Ω–æ!' 
                  })
                } else {
                  console.warn('‚ö†Ô∏è No images generated')
                  addMessage({ 
                    role: 'assistant', 
                    content: '‚ö†Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã, –Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ.' 
                  })
                }
              } catch (imgError) {
                console.error('‚ùå Image generation failed:', imgError)
                const errorMsg = imgError instanceof Error && imgError.message.includes('timeout')
                  ? '‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (60 —Å–µ–∫). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
                  : '‚ö†Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
                addMessage({ 
                  role: 'assistant', 
                  content: errorMsg
                })
              }
            }
          }
          }
          
          setHtmlPreview(finalHtml)
          
          addMessage({ 
            role: 'assistant', 
            content: '‚úÖ –ì–æ—Ç–æ–≤–æ! –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É.' 
          })
        } catch (editError) {
          console.error('‚ùå AI edit failed:', editError)
          addMessage({
            role: 'assistant',
            content: `‚ùå –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è: ${editError instanceof Error ? editError.message : '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑'}`
          })
        }
        
        setLoading(false)
        return
      }
      
      console.log('üé® Starting document creation...')
      console.log('  üìÑ docType:', docType)
      console.log('  üîß appMode:', appMode)
      
      const contentPrompt = getPromptForAction(docType, 'contentGeneration')
      const selectedStyleName = useStore.getState().selectedStyleName
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–∞–π—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –ø—Ä–æ–º–ø—Ç
      let websiteContext = ''
      if (isDocumentCreationFromWebsite && parsedWebsiteData) {
        websiteContext = `\n\nüìä –î–ê–ù–ù–´–ï –° –°–ê–ô–¢–ê "${parsedWebsiteData.title}" (${parsedWebsiteData.url}):

–û–ü–ò–°–ê–ù–ò–ï –°–ê–ô–¢–ê:
${parsedWebsiteData.description}

–û–°–ù–û–í–ù–û–ô –ö–û–ù–¢–ï–ù–¢:
${parsedWebsiteData.content}

–ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø: ${parsedWebsiteData.images.length} —à—Ç.

–í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞. –í–æ–∑—å–º–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —É—Å–ª—É–≥–∏, –ø—Ä–æ–¥—É–∫—Ç—ã —Å —ç—Ç–æ–≥–æ —Å–∞–π—Ç–∞.`
        
        // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–∞–π—Ç–∞ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        clearParsedWebsiteData()
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å—Ç–∏–ª–µ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö
      let contextInfo = ''
      
      if (selectedStyleName) {
        contextInfo += `\n\nüé® –í–´–ë–†–ê–ù–ù–´–ô –°–¢–ò–õ–¨: "${selectedStyleName}"\n–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–ø–æ–º—è–Ω–∏ –≤ –æ—Ç–≤–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—à—å –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–æ–≥–æ —Å—Ç–∏–ª—è.`
      }
      
      if (uploadedImages.length > 0) {
        contextInfo += `\n\nüì∏ –ó–ê–ì–†–£–ñ–ï–ù–û –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô: ${uploadedImages.length} —à—Ç.\n–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–ø–æ–º—è–Ω–∏ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.`
      }
      
      // üí¨ –ò–°–¢–û–†–ò–Ø –î–ò–ê–õ–û–ì–ê (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞)
      const recentMessages = messages?.slice(-10) || []
      const conversationHistory = recentMessages.length > 0
        ? recentMessages
            .map(msg => {
              const role = msg.role === 'user' ? 'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' : 'ü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç'
              return `${role}: ${msg.content}`
            })
            .join('\n')
        : ''
      
      const historyContext = conversationHistory 
        ? `\n\nüí¨ –ò–°–¢–û–†–ò–Ø –î–ò–ê–õ–û–ì–ê (–¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, —É—á–∏—Ç—ã–≤–∞–π –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è):\n${conversationHistory}\n` 
        : ''
      
      // üìÑ –¢–ï–ö–£–©–ò–ô –î–û–ö–£–ú–ï–ù–¢ (—á—Ç–æ –±—ã–ª–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Ä–∞–Ω–µ–µ)
      let documentContext = ''
      if (lastGeneratedContent && lastGeneratedContent.length > 0) {
        const contentPreview = lastGeneratedContent.length > 2000 
          ? lastGeneratedContent.substring(0, 2000) + '...'
          : lastGeneratedContent
        documentContext = `\n\nüìÑ –¢–ï–ö–£–©–ò–ô –î–û–ö–£–ú–ï–ù–¢ (—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–æ–≥–æ, —á—Ç–æ —Ç—ã —Å–æ–∑–¥–∞–ª):\n${contentPreview}\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ —ç—Ç–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ ("–≤–∞—Ä–∏–∞–Ω—Ç 3", "–∏–∑–º–µ–Ω–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫", "–ø–æ–º–µ–Ω—è–π —ç—Ç–æ").`
      }
      
      // üé® –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ù–´–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø (—á—Ç–æ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ AI)
      let imagesContext = ''
      if (lastGeneratedImages.length > 0) {
        imagesContext = `\n\nüé® –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ù–´–ï AI –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø:\n`
        lastGeneratedImages.forEach((img, i) => {
          imagesContext += `–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${i + 1}: "${img.prompt}"\n`
        })
        imagesContext += `\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø—Ä–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ("–ø–æ–º–µ–Ω—è–π –∫–∞—Ä—Ç–∏–Ω–∫—É 2", "–∏–∑–º–µ–Ω–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –æ–≥—É—Ä–µ—Ü").`
      }
      
      // üéØ –í–´–î–ï–õ–ï–ù–ù–´–ô –≠–õ–ï–ú–ï–ù–¢ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–≤–µ–ª –∫—É—Ä—Å–æ—Ä)
      let selectedElementContext = ''
      if (selectedElement) {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É
        let elementType = '—ç–ª–µ–º–µ–Ω—Ç'
        const selector = selectedElement.selector.toLowerCase()
        if (selector.includes('img')) {
          elementType = '–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'
        } else if (selector.match(/h[1-6]/)) {
          elementType = '–∑–∞–≥–æ–ª–æ–≤–æ–∫'
        } else if (selector.includes('button')) {
          elementType = '–∫–Ω–æ–ø–∫–∞'
        } else if (selector.includes('p')) {
          elementType = '–ø–∞—Ä–∞–≥—Ä–∞—Ñ'
        } else if (selector.includes('div')) {
          elementType = '–±–ª–æ–∫'
        }
        
        selectedElementContext = `\n\nüéØ –í–´–î–ï–õ–ï–ù–ù–´–ô –≠–õ–ï–ú–ï–ù–¢ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–≤–µ–ª –∫—É—Ä—Å–æ—Ä –∏ —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –≠–¢–û):
–¢–∏–ø: ${elementType}
–°–µ–ª–µ–∫—Ç–æ—Ä: ${selectedElement.selector}
–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç: ${selectedElement.textContent.substring(0, 300)}${selectedElement.textContent.length > 300 ? '...' : ''}
HTML: ${selectedElement.innerHTML.substring(0, 500)}${selectedElement.innerHTML.length > 500 ? '...' : ''}

‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ù–û –í–ê–ñ–ù–û: –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç "—ç—Ç–æ", "–∑–¥–µ—Å—å", "–ø–æ–º–µ–Ω—è–π", "–∏–∑–º–µ–Ω–∏", "—Å–¥–µ–ª–∞–π –∫—Ä–∞—Å–Ω—ã–º" - –æ–Ω –∏–º–µ–µ—Ç –≤ –≤–∏–¥—É –ò–ú–ï–ù–ù–û –≠–¢–û–¢ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç! –ü—Ä–∏–º–µ–Ω—è–π –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –∫ –Ω–µ–º—É.`
      }
      
      // hasPlanData —É–∂–µ –æ–±—ä—è–≤–ª–µ–Ω–∞ –≤—ã—à–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
      const planContext = hasPlanData ? formatConversationalPlan(planningData, docType) : ''
      
      if (hasPlanData) {
        console.log('üìã Using conversational plan for generation:', {
          theme: planningData.theme,
          audience: planningData.targetAudience,
          goals: planningData.goals?.length || 0,
          pageCount: planningData.pageCount,
          imageCount: planningData.imageCount
        })
      }
      
      // ============================================
      // PRE-GENERATION CHECK: Verify sufficient generations
      // ============================================
      if (!isGuestMode && session?.user) {
        try {
          const statusResponse = await fetch('/api/user/subscription-status')
          if (statusResponse.ok) {
            const statusData = await statusResponse.json()

            // Calculate estimated cost (we don't know exact image count yet, so estimate max)
            const estimatedImageCount = appMode === 'advanced' ? 5 : 0 // Max 5 images per 1 generation
            const estimatedCost = Math.ceil(estimatedImageCount / 5)

            const useAdvanced = appMode === 'advanced' && statusData.subscriptionStatus === 'active'
            const availableGenerations = useAdvanced
              ? statusData.advancedGenerationsRemaining
              : statusData.freeGenerationsRemaining

            if (availableGenerations < estimatedCost) {
              addMessage({
                role: 'assistant',
                content: `‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π!\n\n–ù–µ–æ–±—Ö–æ–¥–∏–º–æ: ${estimatedCost} –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: ${availableGenerations} –≥–µ–Ω–µ—Ä–∞—Ü–∏–π\n\n${useAdvanced ? '–ü–æ–¥–æ–∂–¥–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –∏–ª–∏ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –Ω–∞ FREE —Ä–µ–∂–∏–º.' : '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –Ω–∞ ADVANCED —Ä–µ–∂–∏–º –∏–ª–∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞.'}`
              })
              return
            }
          }
        } catch (error) {
          console.error('Failed to check generation balance:', error)
        }
      }

      const fullPrompt = contentPrompt
        ? `${contentPrompt}${websiteContext}${contextInfo}${planContext}${historyContext}${documentContext}${imagesContext}${selectedElementContext}\n\nüìù –¢–ï–ö–£–©–ò–ô –ó–ê–ü–†–û–° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø: ${userMsg}`
        : `${userMsg}${websiteContext}${contextInfo}${planContext}${historyContext}${documentContext}${imagesContext}${selectedElementContext}`

      const result = await generateDocumentWithMode({
        prompt: fullPrompt,
        docType,
        mode: appMode,
        styleConfig,
        uploadedImages,
        priceItems,
        parsedWebsiteData: isDocumentCreationFromWebsite ? parsedWebsiteData : undefined,
        onProgress: (message: string) => {
          // Use Set to track shown messages and prevent duplicates completely
          if (!shownProgressMessages.current.has(message)) {
            shownProgressMessages.current.add(message)
            addMessage({ role: 'assistant', content: message })
            console.log('‚úÖ Progress:', message.substring(0, 60) + '...')
          } else {
            console.log('‚è≠Ô∏è Skipping duplicate progress:', message.substring(0, 60) + '...')
          }
        }
      })
      
      const parsedData = parseAIResponse(result.content, docType)
      
      if (parsedData) {
        if (docType === 'proposal' && 'priceItems' in parsedData) {
          const data = parsedData as ParsedProposalData
          setPriceItems(convertToPriceItems(data.priceItems))
          addMessage({ 
            role: 'assistant', 
            content: `üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${data.priceItems.length} –ø–æ–∑–∏—Ü–∏–π —Å —Ü–µ–Ω–∞–º–∏` 
          })
        } else if (docType === 'invoice' && 'items' in parsedData) {
          const data = parsedData as ParsedInvoiceData
          setPriceItems(convertToPriceItems(data.items))
          const total = data.total || 0
          addMessage({ 
            role: 'assistant', 
            content: `üìä –°—á—ë—Ç –Ω–∞ ${data.items.length} –ø–æ–∑–∏—Ü–∏–π –Ω–∞ —Å—É–º–º—É ${total.toFixed(2)} ‚ÇΩ` 
          })
        }
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –∫–æ–º–∞–Ω–¥
      setLastGeneratedContent(result.content)
      
      if (result.generatedImages.length > 0) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö
        const imageInfo = result.generatedImages.map((img) => ({
          slot: img.slot,
          prompt: img.prompt
        }))
        setLastGeneratedImages(imageInfo)
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
        setGeneratedImagesForExport(result.generatedImages)
        
        addMessage({
          role: 'assistant',
          content: `üé® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ ${result.generatedImages.length} AI-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤–æ –≤–∫–ª–∞–¥–∫—É "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è" –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.`
        })
      }
      
      if (result.qaReport) {
        const qaEmoji = result.qaReport.score >= 90 ? 'üåü' : result.qaReport.score >= 75 ? '‚úÖ' : '‚ö†Ô∏è'
        addMessage({
          role: 'assistant',
          content: `${qaEmoji} –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞: ${result.qaReport.score}/100 (${result.iterations} ${result.iterations === 1 ? '–∏—Ç–µ—Ä–∞—Ü–∏—è' : '–∏—Ç–µ—Ä–∞—Ü–∏–π'})`
        })
      }
      
      setHtmlPreview(result.html)

      addMessage({ 
        role: 'assistant', 
        content: '‚úÖ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–µ–≤—å—é —Å–ø—Ä–∞–≤–∞. –ú–æ–∂–µ—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª—ã –∏–ª–∏ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–∏—Ç—å.' 
      })
      
      if (hasPlanData) {
        resetPlanningData()
        addMessage({
          role: 'assistant',
          content: 'üìã –ü–ª–∞–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω. –î–ª—è –Ω–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å –ø–ª–∞–Ω–æ–º –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º Plan.'
        })
      }

      // ============================================
      // POST-GENERATION: Consume generations based on mode and image count
      // ============================================
      if (!isGuestMode && session?.user) {
        const imageCount = result.generatedImages.length
        const generationCost = Math.ceil(imageCount / 5) || 1 // Minimum 1 generation

        if (appMode === 'advanced') {
          // Try to consume ADVANCED generations
          try {
            const consumeResponse = await fetch('/api/user/consume-advanced-generation', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ count: generationCost })
            })

            if (consumeResponse.ok) {
              const consumeData = await consumeResponse.json()
              const remainingMsg = consumeData.type === 'advanced'
                ? `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ ${consumeData.consumed} ADVANCED –≥–µ–Ω–µ—Ä–∞—Ü–∏–π. –û—Å—Ç–∞–ª–æ—Å—å: ${consumeData.remaining}/${consumeData.total}`
                : `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ ${consumeData.consumed} FREE –≥–µ–Ω–µ—Ä–∞—Ü–∏–π. –û—Å—Ç–∞–ª–æ—Å—å: ${consumeData.remaining}/${consumeData.total}`

              addMessage({
                role: 'assistant',
                content: `üí≥ ${remainingMsg}`
              })
              console.log(`‚úÖ Generation consumed: ${consumeData.type}, cost: ${generationCost}, remaining: ${consumeData.remaining}`)
            } else {
              console.error('Failed to consume generation:', await consumeResponse.text())
            }
          } catch (error) {
            console.error('Error consuming generation:', error)
          }
        } else if (appMode === 'free') {
          // Consume FREE generation
          const success = await consumeFreeGeneration()
          if (success) {
            console.log(`‚úÖ Free generation consumed. Remaining: ${freeGenerationsRemaining - 1}`)
          }
        }
      }

      // üéØ Show registration modal for guest users after demo
      if (isGuestMode && !guestGenerationCompleted.current) {
        guestGenerationCompleted.current = true
        console.log('üéØ Guest demo completed, showing registration modal in 3 seconds...')

        setTimeout(() => {
          setShowGuestDemoModal(true)
        }, 3000)
      }

    } catch (error) {
      console.error('Generation error:', error)

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
      if (error instanceof Error && error.name === 'AbortError') {
        console.log('‚õî Generation was aborted by user')
        // –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ handleStop()
      } else {
        addMessage({
          role: 'assistant',
          content: `‚ùå –û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`
        })
      }
    } finally {
      setLoading(false)
      isGeneratingRef.current = false
      abortControllerRef.current = null

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
      setTimeout(() => {
        inputRef.current?.focus()
      }, 100)
    }
  }

  return (
    <div className="h-full flex flex-col overflow-hidden bg-gradient-to-b from-background to-muted/10">
      <div className="border-b border-border p-2 sm:p-3 flex items-center justify-between flex-shrink-0 bg-background/80 backdrop-blur-sm shadow-sm">
        <div className="flex items-center gap-2">
          <h2 className="font-semibold text-xs sm:text-sm">–ß–∞—Ç</h2>
          
          {/* –ò–ù–î–ò–ö–ê–¢–û–† –†–ï–ñ–ò–ú–ê */}
          <div className={`
            px-2 py-1 rounded-full text-xs font-medium transition-all
            ${workMode === 'plan' 
              ? 'bg-blue-100 text-blue-700 dark:bg-blue-900/30 dark:text-blue-400' 
              : 'bg-green-100 text-green-700 dark:bg-green-900/30 dark:text-green-400'
            }
          `}>
            {workMode === 'plan' ? 'üìù –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ' : 'üöÄ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞'}
          </div>
        </div>
        
        <ProjectSelector />
      </div>

      <div className="flex-1 overflow-y-auto p-2 sm:p-3 md:p-4 space-y-2 sm:space-y-3">
        {(!messages || messages.length === 0) && (
          <div className="text-center text-muted-foreground mt-10">
            <p className="text-sm sm:text-base">–ù–∞—á–Ω–∏—Ç–µ —Å –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è</p>
            <p className="text-xs mt-2">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: /import, /propose, /choose, /export</p>
          </div>
        )}
        {messages?.map((msg) => (
          <motion.div
            key={msg.id}
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}
          >
            {msg.type === 'interactive-planning' ? (
              <div className="max-w-[95%] sm:max-w-[90%] md:max-w-[85%] w-full">
                <InlinePlanningCard
                  docType={docType}
                  onSubmit={handlePlanningCardSubmit}
                  onSkip={handlePlanningCardSkip}
                />
              </div>
            ) : (
              <div
                className={`max-w-[90%] sm:max-w-[85%] md:max-w-[75%] lg:max-w-[70%] px-3 py-2 sm:px-4 rounded-lg shadow-md ${
                  msg.role === 'user'
                    ? 'bg-primary text-primary-foreground'
                    : 'bg-muted text-foreground'
                }`}
              >
                <p className="text-xs sm:text-sm whitespace-pre-wrap break-words">{msg.content}</p>
              </div>
            )}
          </motion.div>
        ))}
        {loading && (
          <div className="flex justify-start">
            <div className="bg-muted px-3 py-2 sm:px-4 rounded-lg flex items-center gap-2 shadow-md">
              <Loader2 className="w-4 h-4 animate-spin" />
              <span className="text-xs sm:text-sm">–û–±—Ä–∞–±–æ—Ç–∫–∞...</span>
            </div>
          </div>
        )}
        <div ref={messagesEndRef} />
      </div>

      <div className="border-t border-border flex-shrink-0 bg-background/80 backdrop-blur-sm shadow-sm">
        {/* Guest Mode Banner */}
        {isGuestMode && htmlPreview && htmlPreview.trim().length > 0 && (
          <div className="px-3 py-4 bg-gradient-to-r from-purple-500/10 to-pink-500/10 border-b border-purple-500/20">
            <div className="text-center">
              <p className="text-sm font-semibold mb-2">üéâ –í—ã —Å–æ–∑–¥–∞–ª–∏ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç!</p>
              <p className="text-xs text-muted-foreground mb-3">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –±–æ–ª—å—à–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</p>
              <button
                onClick={() => router.push('/login')}
                className="px-4 py-2 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-lg text-sm font-medium hover:opacity-90 transition-all"
              >
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </button>
            </div>
          </div>
        )}

        {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–æ–≤ */}
        <div className="p-2 sm:p-3 border-b border-border flex items-center justify-center" data-tour="mode-switcher">
          <ModeSwitcher />
        </div>
        
        {/* –°—Ç–∞—Ç—É—Å —Ä–µ–∂–∏–º–∞ */}
        <div className={`
          px-2 sm:px-3 py-2 text-[10px] sm:text-xs font-medium text-center border-b border-border
          ${workMode === 'plan' 
            ? 'bg-blue-50 text-blue-700 dark:bg-blue-950/50 dark:text-blue-400' 
            : 'bg-green-50 text-green-700 dark:bg-green-950/50 dark:text-green-400'
          }
        `}>
          {workMode === 'plan' 
            ? 'üí¨ –†–µ–∂–∏–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: –æ–ø–∏—à–∏—Ç–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞'
            : (planningData?.theme || planningData?.targetAudience || (planningData?.goals?.length || 0) > 0)
              ? '‚ö° –ü–ª–∞–Ω –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é'
              : 'üöÄ –ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑ –ø–ª–∞–Ω–∞'
          }
        </div>
        
        {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
        <div className="p-2 sm:p-2.5 lg:p-3 flex gap-1.5 sm:gap-2">
          <div data-tour="file-upload">
            <FileUploader />
          </div>
          
          {/* –ö—Ä—É–≥–ª–∞—è –∫–Ω–æ–ø–∫–∞ "–í–µ–±" */}
          <div className="relative" data-tour="website-parse">
            <button
              onClick={() => {
                if (useStore.getState().isFeatureAvailable('parseWebsite')) {
                  setIsWebModalOpen(true)
                }
              }}
              disabled={loading || isParsingWebsite || !useStore.getState().isFeatureAvailable('parseWebsite')}
              className={`min-w-[40px] min-h-[40px] sm:min-w-[44px] sm:min-h-[44px] lg:min-w-[48px] lg:min-h-[48px] w-10 h-10 sm:w-11 sm:h-11 lg:w-12 lg:h-12 flex items-center justify-center rounded-full transition-all shadow-md hover:shadow-lg ${
                useStore.getState().isFeatureAvailable('parseWebsite')
                  ? 'bg-blue-500 text-white hover:bg-blue-600'
                  : 'bg-gray-300 text-gray-500 cursor-not-allowed'
              } disabled:opacity-50`}
              title={
                useStore.getState().isFeatureAvailable('parseWebsite')
                  ? '–ü–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–∞'
                  : '–î–æ—Å—Ç—É–ø–Ω–æ –≤ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–º —Ä–µ–∂–∏–º–µ'
              }
            >
              <Globe className="w-4 h-4 sm:w-5 sm:h-5 lg:w-6 lg:h-6" />
            </button>
            {!useStore.getState().isFeatureAvailable('parseWebsite') && (
              <div className="absolute -top-8 left-1/2 -translate-x-1/2 whitespace-nowrap bg-black/80 text-white text-xs px-2 py-1 rounded pointer-events-none opacity-0 group-hover:opacity-100 transition-opacity">
                –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ä–µ–∂–∏–º
              </div>
            )}
          </div>
          
          <input
            ref={inputRef}
            type="text"
            value={input}
            onChange={(e) => setInput(e.target.value)}
            onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && handleRun()}
            data-tour="chat-input"
            disabled={!!(isGuestMode && htmlPreview && htmlPreview.trim().length > 0)}
            placeholder={
              isGuestMode && htmlPreview && htmlPreview.trim().length > 0
                ? 'üîí –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...'
                : workMode === 'plan'
                ? 'üí¨ –û–ø–∏—à–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ...'
                : loading
                ? '‚ö†Ô∏è –ù–∞–ø–∏—à–∏—Ç–µ "—Å—Ç–æ–π" –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...'
                : 'üöÄ –û–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É...'
            }
            className="flex-1 min-h-[40px] sm:min-h-[44px] lg:min-h-[48px] px-2 sm:px-3 lg:px-4 py-2 text-xs sm:text-sm lg:text-base bg-background text-foreground border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-primary shadow-sm disabled:opacity-50 disabled:cursor-not-allowed"
          />
          
          {/* –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ –æ–±–ª–∞—Å—Ç–∏ */}
          <button
            onClick={() => {
              const isActive = selectedElement !== null
              setSelectedElement(isActive ? null : { selector: '', innerHTML: '', textContent: '', outerHTML: '' })
              
              if (!isActive) {
                addMessage({
                  role: 'assistant',
                  content: `üéØ –†–µ–∂–∏–º –≤—ã–±–æ—Ä–∞ –æ–±–ª–∞—Å—Ç–∏ –≤–∫–ª—é—á–µ–Ω!\n\nüëÜ –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –ª—é–±–æ–π —ç–ª–µ–º–µ–Ω—Ç –≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ`
                })
              } else {
                addMessage({
                  role: 'assistant',
                  content: 'üî¥ –†–µ–∂–∏–º –≤—ã–±–æ—Ä–∞ –æ–±–ª–∞—Å—Ç–∏ –≤—ã–∫–ª—é—á–µ–Ω'
                })
              }
            }}
            title={selectedElement?.selector ? `–û–±–ª–∞—Å—Ç—å –≤—ã–±—Ä–∞–Ω–∞: ${selectedElement.selector}` : selectedElement ? '–†–µ–∂–∏–º –≤—ã–±–æ—Ä–∞ –∞–∫—Ç–∏–≤–µ–Ω - –∫–ª–∏–∫–Ω–∏—Ç–µ –≤ –ø—Ä–µ–≤—å—é' : '–í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –≤—ã–±–æ—Ä–∞ –æ–±–ª–∞—Å—Ç–∏'}
            className={`min-w-[40px] min-h-[40px] sm:min-w-[44px] sm:min-h-[44px] lg:min-w-[48px] lg:min-h-[48px] px-2 sm:px-3 lg:px-3.5 py-2 rounded-md transition-all shadow-md hover:shadow-lg flex items-center justify-center ${
              selectedElement?.selector 
                ? 'bg-green-600 text-white hover:bg-green-700' 
                : selectedElement 
                ? 'bg-orange-600 text-white hover:bg-orange-700'
                : 'bg-gray-600 text-white hover:bg-gray-700'
            }`}
          >
            <Target className={`w-4 h-4 sm:w-5 sm:h-5 lg:w-6 lg:h-6 ${selectedElement ? 'animate-pulse' : ''}`} />
          </button>
          
          <button
            onClick={loading ? handleStop : handleRun}
            disabled={!!((!loading && !input.trim()) || (isGuestMode && htmlPreview && htmlPreview.trim().length > 0))}
            data-auto-run="true"
            title={
              isGuestMode && htmlPreview && htmlPreview.trim().length > 0
                ? '–î–æ—Å—Ç—É–ø–Ω–æ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'
                : loading
                ? '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é'
                : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ'
            }
            className={`min-w-[40px] min-h-[40px] sm:min-w-[44px] sm:min-h-[44px] lg:min-w-[48px] lg:min-h-[48px] px-2.5 sm:px-3 lg:px-4 py-2 rounded-md hover:opacity-90 disabled:opacity-50 transition-all shadow-md hover:shadow-lg flex items-center justify-center ${
              loading
                ? 'bg-red-600 text-white hover:bg-red-700'
                : 'bg-primary text-primary-foreground'
            }`}
          >
            {loading ? <X className="w-4 h-4 sm:w-5 sm:h-5 lg:w-6 lg:h-6" /> : <Send className="w-4 h-4 sm:w-5 sm:h-5 lg:w-6 lg:h-6" />}
          </button>
        </div>
      </div>
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ URL */}
      <WebsiteModal
        isOpen={isWebModalOpen}
        onClose={() => setIsWebModalOpen(false)}
        onSubmit={handleWebsiteParse}
        isLoading={isParsingWebsite}
      />
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è —Å —Å–∞–π—Ç–æ–º */}
      <WebsiteActionModal
        isOpen={websiteActionModalOpen}
        websiteUrl={pendingWebsiteUrl}
        onClose={() => {
          setWebsiteActionModalOpen(false)
          setPendingWebsiteUrl('')
          setPendingWebsiteData(null)
        }}
        onAction={handleWebsiteAction}
      />

      {/* Free Generations Limit Modal */}
      <FreeGenerationsLimitModal
        isOpen={showLimitModal}
        onClose={() => setShowLimitModal(false)}
      />

      {/* Guest Demo Complete Modal */}
      <GuestDemoCompleteModal
        isOpen={showGuestDemoModal}
        onClose={() => setShowGuestDemoModal(false)}
      />
    </div>
  )
}

