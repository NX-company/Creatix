'use client'

import { useState, useRef, useEffect } from 'react'
import { Send, Loader2, Globe } from 'lucide-react'
import { useStore } from '@/lib/store'
import { motion } from 'framer-motion'
import { generateContent, generateHTML, getPromptForAction } from '@/lib/api'
import { parseAIResponse, convertToPriceItems } from '@/lib/jsonParser'
import type { ParsedProposalData, ParsedInvoiceData } from '@/lib/jsonParser'
import { applyAIEdit, isEditCommand } from '@/lib/aiEditor'
import { generateDocumentWithMode } from '@/lib/agents/orchestrator'
import { fetchWithTimeout } from '@/lib/fetchWithTimeout'
import { processPlanningMode, formatPlanForGeneration } from '@/lib/agents/planningAgent'
import ProjectSelector from './ProjectSelector'
import FileUploader from './FileUploader'
import WebsiteModal from './WebsiteModal'
import ModeSwitcher from './ModeSwitcher'
import InlinePlanningCard from './InlinePlanningCard'

export default function ChatPanel() {
  const { 
    messages, 
    addMessage, 
    setHtmlPreview,
    htmlPreview,
    docType, 
    styleConfig, 
    priceItems,
    addGeneratedFile,
    setActiveTab,
    setPriceItems,
    uploadedImages,
    selectedElement,
    setSelectedElement,
    parsedWebsiteData,
    setParsedWebsiteData,
    clearParsedWebsiteData,
    appMode,
    lastGeneratedContent,
    setLastGeneratedContent,
    lastGeneratedImages,
    setLastGeneratedImages,
    workMode,
    setWorkMode,
    planningData,
    setPlanningData,
    resetPlanningData
  } = useStore()
  const [input, setInput] = useState('')
  const [loading, setLoading] = useState(false)
  const [isWebModalOpen, setIsWebModalOpen] = useState(false)
  const [isParsingWebsite, setIsParsingWebsite] = useState(false)
  const isGeneratingRef = useRef(false)
  const messagesEndRef = useRef<HTMLDivElement>(null)

  useEffect(() => {
    if (messagesEndRef.current) {
      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })
    }
  }, [messages])

  const handlePlanningCardSubmit = (selectedQuestions: string[], pageCount?: number, imageCount?: number, mode?: 'batch' | 'sequential') => {
    setPlanningData({
      selectedQuestions,
      pageCount,
      imageCount,
      answerMode: mode || null,
      currentQuestionIndex: 0,
      collectedAnswers: {}
    })
    
    if (mode === 'sequential' && selectedQuestions.length > 0) {
      addMessage({
        role: 'assistant',
        content: `üìã –û—Ç–ª–∏—á–Ω–æ! –Ø –∑–∞–¥–∞–º –≤–∞–º ${selectedQuestions.length} ${selectedQuestions.length === 1 ? '–≤–æ–ø—Ä–æ—Å' : selectedQuestions.length < 5 ? '–≤–æ–ø—Ä–æ—Å–∞' : '–≤–æ–ø—Ä–æ—Å–æ–≤'}.\n\n–í–æ–ø—Ä–æ—Å 1/${selectedQuestions.length}:\n\n‚ùì ${selectedQuestions[0]}`
      })
    } else if (mode === 'batch' && selectedQuestions.length > 0) {
      const questionsList = selectedQuestions.map((q, i) => `${i + 1}. ${q}`).join('\n')
      addMessage({
        role: 'assistant',
        content: `üìã –û—Ç–ª–∏—á–Ω–æ! –í–æ—Ç –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –≤—ã–±—Ä–∞–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å:\n\n${questionsList}\n\nüí¨ –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ (–º–æ–∂–Ω–æ –∫—Ä–∞—Ç–∫–æ –ø–æ –∫–∞–∂–¥–æ–º—É –ø—É–Ω–∫—Ç—É).`
      })
    }
  }

  const handlePlanningCardSkip = () => {
    addMessage({
      role: 'assistant',
      content: 'üëå –ü–æ–Ω—è–ª! –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–≤–æ–±–æ–¥–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ. –ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å, –∏ —è –ø–æ–º–æ–≥—É –≤–∞–º.'
    })
  }

  const handleWebsiteParse = async (url: string) => {
    setIsParsingWebsite(true)
    
    addMessage({
      role: 'user',
      content: `üåê –ü–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–∞: ${url}`
    })
    
    addMessage({
      role: 'assistant',
      content: 'üîÑ –û—Ç–∫—Ä—ã–≤–∞—é —Å–∞–π—Ç –∏ –∏–∑–≤–ª–µ–∫–∞—é –∫–æ–Ω—Ç–µ–Ω—Ç...'
    })

    try {
      const response = await fetchWithTimeout('/api/parse-website', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ url }),
      }, 90000)

      if (!response.ok) {
        throw new Error('Failed to parse website')
      }

      const data = await response.json()
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è AI
      const content = [
        ...data.headings.h1,
        ...data.headings.h2.slice(0, 5),
        ...data.paragraphs.slice(0, 10)
      ].filter(Boolean).join('\n\n')
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ store
      const websiteData = {
        url: data.url,
        title: data.title,
        description: data.description || '',
        headings: data.headings,
        paragraphs: data.paragraphs,
        images: data.images,
        content: content
      }
      
      setParsedWebsiteData(websiteData)
      
      const summary = `‚úÖ –°–∞–π—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!

üìÑ **–ó–∞–≥–æ–ª–æ–≤–æ–∫:** ${data.title}
üìù **–û–ø–∏—Å–∞–Ω–∏–µ:** ${data.description || '–ù–µ –Ω–∞–π–¥–µ–Ω–æ'}

**–ù–∞–π–¥–µ–Ω–æ:**
‚Ä¢ ${data.headings.h1.length} –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ H1
‚Ä¢ ${data.headings.h2.length} –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ H2
‚Ä¢ ${data.paragraphs.length} –∞–±–∑–∞—Ü–µ–≤ —Ç–µ–∫—Å—Ç–∞
‚Ä¢ ${data.images.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ ${data.links.length} —Å—Å—ã–ª–æ–∫

**–û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏:**
${data.headings.h1.slice(0, 3).map((h: string) => `‚Ä¢ ${h}`).join('\n')}

üí° **–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ:** "–°–æ–∑–¥–∞–π –ö–ü" –∏–ª–∏ "–°–¥–µ–ª–∞–π –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é"

–î–∞–Ω–Ω—ã–µ —Å–∞–π—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞!`

      addMessage({
        role: 'assistant',
        content: summary
      })
      
      setIsWebModalOpen(false)
    } catch (error) {
      console.error('Website parsing error:', error)
      addMessage({
        role: 'assistant',
        content: `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —Å–∞–π—Ç–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`
      })
    } finally {
      setIsParsingWebsite(false)
    }
  }

  const handleRun = async () => {
    if (!input.trim() || loading || isGeneratingRef.current) return
    
    isGeneratingRef.current = true
    const userMsg = input.trim()
    addMessage({ role: 'user', content: userMsg })
    setInput('')
    setLoading(true)

    try {
      if (workMode === 'plan') {
        const conversationHistory = messages.slice(-10)
          .map(msg => `${msg.role === 'user' ? 'üë§' : 'ü§ñ'}: ${msg.content}`)
          .join('\n')
        
        const result = await processPlanningMode(userMsg, docType, planningData, conversationHistory, appMode)
        
        if (result.response === 'SHOW_PLANNING_CARD') {
          addMessage({ 
            role: 'assistant', 
            content: 'üí¨ –î–∞–≤–∞–π—Ç–µ —Å–ø–ª–∞–Ω–∏—Ä—É–µ–º –≤–∞—à –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞!',
            type: 'interactive-planning',
            interactiveData: { completed: false }
          })
        } else {
          addMessage({ role: 'assistant', content: result.response })
        }
        
        if (Object.keys(result.updatedData).length > 0) {
          setPlanningData(result.updatedData)
        }
        
        setLoading(false)
        isGeneratingRef.current = false
        return
      }
      
      const isDocumentCreationFromWebsite = parsedWebsiteData && (
        userMsg.toLowerCase().includes('—Å–æ–∑–¥–∞–π') ||
        userMsg.toLowerCase().includes('—Å–¥–µ–ª–∞–π') ||
        userMsg.toLowerCase().includes('–∫–ø') ||
        userMsg.toLowerCase().includes('–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é') ||
        userMsg.toLowerCase().includes('–ø–∏—Å—å–º–æ') ||
        userMsg.toLowerCase().includes('–¥–æ–∫—É–º–µ–Ω—Ç')
      )
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Å–∞–π—Ç–∞)
      if (htmlPreview && !isDocumentCreationFromWebsite && isEditCommand(userMsg)) {
        console.log('üîß Detected edit command:', userMsg)
        
        let editMessage = '‚úèÔ∏è –í–Ω–æ—à—É –∏–∑–º–µ–Ω–µ–Ω–∏—è'
        if (selectedElement) {
          editMessage += ' –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç'
        }
        addMessage({ role: 'assistant', content: editMessage + '...' })
        
        try {
          const editedHtml = await applyAIEdit(htmlPreview, userMsg, selectedElement)
          console.log('‚úÖ AI edit successful, HTML length:', editedHtml.length)
          if (selectedElement) {
            console.log('üéØ Edited selected element:', selectedElement.selector)
          }
          setHtmlPreview(editedHtml)
          
          addMessage({ 
            role: 'assistant', 
            content: '‚úÖ –ì–æ—Ç–æ–≤–æ! –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É.' 
          })
        } catch (editError) {
          console.error('‚ùå AI edit failed:', editError)
          addMessage({
            role: 'assistant',
            content: `‚ùå –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è: ${editError instanceof Error ? editError.message : '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑'}`
          })
        }
        
        setLoading(false)
        return
      }
      
      const contentPrompt = getPromptForAction(docType, 'contentGeneration')
      const selectedStyleName = useStore.getState().selectedStyleName
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–∞–π—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –ø—Ä–æ–º–ø—Ç
      let websiteContext = ''
      if (isDocumentCreationFromWebsite && parsedWebsiteData) {
        websiteContext = `\n\nüìä –î–ê–ù–ù–´–ï –° –°–ê–ô–¢–ê "${parsedWebsiteData.title}" (${parsedWebsiteData.url}):

–û–ü–ò–°–ê–ù–ò–ï –°–ê–ô–¢–ê:
${parsedWebsiteData.description}

–û–°–ù–û–í–ù–û–ô –ö–û–ù–¢–ï–ù–¢:
${parsedWebsiteData.content}

–ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø: ${parsedWebsiteData.images.length} —à—Ç.

–í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞. –í–æ–∑—å–º–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —É—Å–ª—É–≥–∏, –ø—Ä–æ–¥—É–∫—Ç—ã —Å —ç—Ç–æ–≥–æ —Å–∞–π—Ç–∞.`
        
        // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–∞–π—Ç–∞ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        clearParsedWebsiteData()
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å—Ç–∏–ª–µ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö
      let contextInfo = ''
      
      if (selectedStyleName) {
        contextInfo += `\n\nüé® –í–´–ë–†–ê–ù–ù–´–ô –°–¢–ò–õ–¨: "${selectedStyleName}"\n–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–ø–æ–º—è–Ω–∏ –≤ –æ—Ç–≤–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—à—å –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–æ–≥–æ —Å—Ç–∏–ª—è.`
      }
      
      if (uploadedImages.length > 0) {
        contextInfo += `\n\nüì∏ –ó–ê–ì–†–£–ñ–ï–ù–û –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô: ${uploadedImages.length} —à—Ç.\n–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–ø–æ–º—è–Ω–∏ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.`
      }
      
      // üí¨ –ò–°–¢–û–†–ò–Ø –î–ò–ê–õ–û–ì–ê (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞)
      const recentMessages = messages.slice(-10)
      const conversationHistory = recentMessages.length > 0
        ? recentMessages
            .map(msg => {
              const role = msg.role === 'user' ? 'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' : 'ü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç'
              return `${role}: ${msg.content}`
            })
            .join('\n')
        : ''
      
      const historyContext = conversationHistory 
        ? `\n\nüí¨ –ò–°–¢–û–†–ò–Ø –î–ò–ê–õ–û–ì–ê (–¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, —É—á–∏—Ç—ã–≤–∞–π –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è):\n${conversationHistory}\n` 
        : ''
      
      // üìÑ –¢–ï–ö–£–©–ò–ô –î–û–ö–£–ú–ï–ù–¢ (—á—Ç–æ –±—ã–ª–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Ä–∞–Ω–µ–µ)
      let documentContext = ''
      if (lastGeneratedContent && lastGeneratedContent.length > 0) {
        const contentPreview = lastGeneratedContent.length > 2000 
          ? lastGeneratedContent.substring(0, 2000) + '...'
          : lastGeneratedContent
        documentContext = `\n\nüìÑ –¢–ï–ö–£–©–ò–ô –î–û–ö–£–ú–ï–ù–¢ (—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–æ–≥–æ, —á—Ç–æ —Ç—ã —Å–æ–∑–¥–∞–ª):\n${contentPreview}\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ —ç—Ç–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ ("–≤–∞—Ä–∏–∞–Ω—Ç 3", "–∏–∑–º–µ–Ω–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫", "–ø–æ–º–µ–Ω—è–π —ç—Ç–æ").`
      }
      
      // üé® –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ù–´–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø (—á—Ç–æ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ AI)
      let imagesContext = ''
      if (lastGeneratedImages.length > 0) {
        imagesContext = `\n\nüé® –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ù–´–ï AI –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø:\n`
        lastGeneratedImages.forEach((img, i) => {
          imagesContext += `–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${i + 1}: "${img.prompt}"\n`
        })
        imagesContext += `\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø—Ä–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ("–ø–æ–º–µ–Ω—è–π –∫–∞—Ä—Ç–∏–Ω–∫—É 2", "–∏–∑–º–µ–Ω–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –æ–≥—É—Ä–µ—Ü").`
      }
      
      // üéØ –í–´–î–ï–õ–ï–ù–ù–´–ô –≠–õ–ï–ú–ï–ù–¢ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–≤–µ–ª –∫—É—Ä—Å–æ—Ä)
      let selectedElementContext = ''
      if (selectedElement) {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É
        let elementType = '—ç–ª–µ–º–µ–Ω—Ç'
        const selector = selectedElement.selector.toLowerCase()
        if (selector.includes('img')) {
          elementType = '–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'
        } else if (selector.match(/h[1-6]/)) {
          elementType = '–∑–∞–≥–æ–ª–æ–≤–æ–∫'
        } else if (selector.includes('button')) {
          elementType = '–∫–Ω–æ–ø–∫–∞'
        } else if (selector.includes('p')) {
          elementType = '–ø–∞—Ä–∞–≥—Ä–∞—Ñ'
        } else if (selector.includes('div')) {
          elementType = '–±–ª–æ–∫'
        }
        
        selectedElementContext = `\n\nüéØ –í–´–î–ï–õ–ï–ù–ù–´–ô –≠–õ–ï–ú–ï–ù–¢ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–≤–µ–ª –∫—É—Ä—Å–æ—Ä –∏ —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –≠–¢–û):
–¢–∏–ø: ${elementType}
–°–µ–ª–µ–∫—Ç–æ—Ä: ${selectedElement.selector}
–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç: ${selectedElement.textContent.substring(0, 300)}${selectedElement.textContent.length > 300 ? '...' : ''}
HTML: ${selectedElement.innerHTML.substring(0, 500)}${selectedElement.innerHTML.length > 500 ? '...' : ''}

‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ù–û –í–ê–ñ–ù–û: –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç "—ç—Ç–æ", "–∑–¥–µ—Å—å", "–ø–æ–º–µ–Ω—è–π", "–∏–∑–º–µ–Ω–∏", "—Å–¥–µ–ª–∞–π –∫—Ä–∞—Å–Ω—ã–º" - –æ–Ω –∏–º–µ–µ—Ç –≤ –≤–∏–¥—É –ò–ú–ï–ù–ù–û –≠–¢–û–¢ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç! –ü—Ä–∏–º–µ–Ω—è–π –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –∫ –Ω–µ–º—É.`
      }
      
      const hasPlanData = planningData.theme || planningData.targetAudience || planningData.goals.length > 0
      const planContext = hasPlanData ? formatPlanForGeneration(planningData, docType) : ''
      
      const fullPrompt = contentPrompt 
        ? `${contentPrompt}${websiteContext}${contextInfo}${planContext}${historyContext}${documentContext}${imagesContext}${selectedElementContext}\n\nüìù –¢–ï–ö–£–©–ò–ô –ó–ê–ü–†–û–° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø: ${userMsg}`
        : `${userMsg}${websiteContext}${contextInfo}${planContext}${historyContext}${documentContext}${imagesContext}${selectedElementContext}`
      
      const result = await generateDocumentWithMode({
        prompt: fullPrompt,
        docType,
        mode: appMode,
        styleConfig,
        uploadedImages,
        priceItems,
        parsedWebsiteData: isDocumentCreationFromWebsite ? parsedWebsiteData : undefined,
        onProgress: (message: string) => {
          addMessage({ role: 'assistant', content: message })
        }
      })
      
      const parsedData = parseAIResponse(result.content, docType)
      
      if (parsedData) {
        if (docType === 'proposal' && 'priceItems' in parsedData) {
          const data = parsedData as ParsedProposalData
          setPriceItems(convertToPriceItems(data.priceItems))
          addMessage({ 
            role: 'assistant', 
            content: `üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${data.priceItems.length} –ø–æ–∑–∏—Ü–∏–π —Å —Ü–µ–Ω–∞–º–∏` 
          })
        } else if (docType === 'invoice' && 'items' in parsedData) {
          const data = parsedData as ParsedInvoiceData
          setPriceItems(convertToPriceItems(data.items))
          addMessage({ 
            role: 'assistant', 
            content: `üìä –°—á—ë—Ç –Ω–∞ ${data.items.length} –ø–æ–∑–∏—Ü–∏–π –Ω–∞ —Å—É–º–º—É ${data.total.toFixed(2)} ‚ÇΩ` 
          })
        }
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –∫–æ–º–∞–Ω–¥
      setLastGeneratedContent(result.content)
      
      if (result.generatedImages.length > 0) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö
        const imageInfo = result.generatedImages.map((img) => ({
          slot: img.slot,
          prompt: img.prompt
        }))
        setLastGeneratedImages(imageInfo)
        
        addMessage({
          role: 'assistant',
          content: `üé® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ ${result.generatedImages.length} AI-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`
        })
      }
      
      if (result.qaReport) {
        const qaEmoji = result.qaReport.score >= 90 ? 'üåü' : result.qaReport.score >= 75 ? '‚úÖ' : '‚ö†Ô∏è'
        addMessage({
          role: 'assistant',
          content: `${qaEmoji} –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞: ${result.qaReport.score}/100 (${result.iterations} ${result.iterations === 1 ? '–∏—Ç–µ—Ä–∞—Ü–∏—è' : '–∏—Ç–µ—Ä–∞—Ü–∏–π'})`
        })
      }
      
      setHtmlPreview(result.html)
      
      // –°–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–∞–≤–∫–∏ (–µ—Å–ª–∏ –±—ã–ª–æ –≤—ã–¥–µ–ª–µ–Ω–æ)
      if (selectedElement) {
        setSelectedElement(null)
      }
      
      addMessage({ 
        role: 'assistant', 
        content: '‚úÖ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–µ–≤—å—é —Å–ø—Ä–∞–≤–∞. –ú–æ–∂–µ—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª—ã –∏–ª–∏ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–∏—Ç—å.' 
      })
      
      if (hasPlanData) {
        resetPlanningData()
        addMessage({
          role: 'assistant',
          content: 'üìã –ü–ª–∞–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω. –î–ª—è –Ω–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å –ø–ª–∞–Ω–æ–º –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º Plan.'
        })
      }
      
    } catch (error) {
      console.error('Generation error:', error)
      addMessage({ 
        role: 'assistant', 
        content: `‚ùå –û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}` 
      })
    } finally {
      setLoading(false)
      isGeneratingRef.current = false
    }
  }

  return (
    <div className="h-full flex flex-col overflow-hidden bg-gradient-to-b from-background to-muted/10">
      <div className="border-b border-border p-3 flex items-center justify-between flex-shrink-0 bg-background/80 backdrop-blur-sm shadow-sm">
        <div className="flex items-center gap-2">
          <h2 className="font-semibold text-sm">–ß–∞—Ç</h2>
          
          {/* –ò–ù–î–ò–ö–ê–¢–û–† –†–ï–ñ–ò–ú–ê */}
          <div className={`
            px-2 py-1 rounded-full text-xs font-medium transition-all
            ${workMode === 'plan' 
              ? 'bg-blue-100 text-blue-700 dark:bg-blue-900/30 dark:text-blue-400' 
              : 'bg-green-100 text-green-700 dark:bg-green-900/30 dark:text-green-400'
            }
          `}>
            {workMode === 'plan' ? 'üìù –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ' : 'üöÄ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞'}
          </div>
        </div>
        
        <ProjectSelector />
      </div>

      <div className="flex-1 overflow-y-auto p-4 space-y-3">
        {messages.length === 0 && (
          <div className="text-center text-muted-foreground mt-10">
            <p>–ù–∞—á–Ω–∏—Ç–µ —Å –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è</p>
            <p className="text-xs mt-2">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: /import, /propose, /choose, /export</p>
          </div>
        )}
        {messages.map((msg) => (
          <motion.div
            key={msg.id}
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}
          >
            {msg.type === 'interactive-planning' ? (
              <div className="max-w-[85%] w-full">
                <InlinePlanningCard
                  docType={docType}
                  onSubmit={handlePlanningCardSubmit}
                  onSkip={handlePlanningCardSkip}
                />
              </div>
            ) : (
              <div
                className={`max-w-[70%] px-4 py-2 rounded-lg shadow-md ${
                  msg.role === 'user'
                    ? 'bg-primary text-primary-foreground'
                    : 'bg-muted text-foreground'
                }`}
              >
                <p className="text-sm whitespace-pre-wrap">{msg.content}</p>
              </div>
            )}
          </motion.div>
        ))}
        {loading && (
          <div className="flex justify-start">
            <div className="bg-muted px-4 py-2 rounded-lg flex items-center gap-2 shadow-md">
              <Loader2 className="w-4 h-4 animate-spin" />
              <span className="text-sm">–û–±—Ä–∞–±–æ—Ç–∫–∞...</span>
            </div>
          </div>
        )}
        <div ref={messagesEndRef} />
      </div>

      <div className="border-t border-border flex-shrink-0 bg-background/80 backdrop-blur-sm shadow-sm">
        {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–æ–≤ */}
        <div className="p-3 border-b border-border flex items-center justify-center" data-tour="mode-switcher">
          <ModeSwitcher />
        </div>
        
        {/* –°—Ç–∞—Ç—É—Å —Ä–µ–∂–∏–º–∞ */}
        <div className={`
          px-3 py-2 text-xs font-medium text-center border-b border-border
          ${workMode === 'plan' 
            ? 'bg-blue-50 text-blue-700 dark:bg-blue-950/50 dark:text-blue-400' 
            : 'bg-green-50 text-green-700 dark:bg-green-950/50 dark:text-green-400'
          }
        `}>
          {workMode === 'plan' 
            ? 'üí¨ –†–µ–∂–∏–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: –æ–ø–∏—à–∏—Ç–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞'
            : (planningData.theme || planningData.targetAudience || planningData.goals.length > 0)
              ? '‚ö° –ü–ª–∞–Ω –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é'
              : 'üöÄ –ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑ –ø–ª–∞–Ω–∞'
          }
        </div>
        
        {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
        <div className="p-3 flex gap-2">
          <div data-tour="file-upload">
            <FileUploader />
          </div>
          
          {/* –ö—Ä—É–≥–ª–∞—è –∫–Ω–æ–ø–∫–∞ "–í–µ–±" */}
          <div className="relative" data-tour="website-parse">
            <button
              onClick={() => {
                if (useStore.getState().isFeatureAvailable('parseWebsite')) {
                  setIsWebModalOpen(true)
                }
              }}
              disabled={loading || isParsingWebsite || !useStore.getState().isFeatureAvailable('parseWebsite')}
              className={`w-10 h-10 flex items-center justify-center rounded-full transition-all shadow-md hover:shadow-lg ${
                useStore.getState().isFeatureAvailable('parseWebsite')
                  ? 'bg-blue-500 text-white hover:bg-blue-600'
                  : 'bg-gray-300 text-gray-500 cursor-not-allowed'
              } disabled:opacity-50`}
              title={
                useStore.getState().isFeatureAvailable('parseWebsite')
                  ? '–ü–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–∞'
                  : '–î–æ—Å—Ç—É–ø–Ω–æ –≤ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–º —Ä–µ–∂–∏–º–µ'
              }
            >
              <Globe className="w-5 h-5" />
            </button>
            {!useStore.getState().isFeatureAvailable('parseWebsite') && (
              <div className="absolute -top-8 left-1/2 -translate-x-1/2 whitespace-nowrap bg-black/80 text-white text-xs px-2 py-1 rounded pointer-events-none opacity-0 group-hover:opacity-100 transition-opacity">
                –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ä–µ–∂–∏–º
              </div>
            )}
          </div>
          
          <input
            type="text"
            value={input}
            onChange={(e) => setInput(e.target.value)}
            onKeyDown={(e) => e.key === 'Enter' && handleRun()}
            data-tour="chat-input"
            placeholder={
              workMode === 'plan'
                ? 'üí¨ –û–ø–∏—à–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å, —Ü–µ–ª–∏, –∞—É–¥–∏—Ç–æ—Ä–∏—é...'
                : 'üöÄ –û–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ "–¥–µ–ª–∞–π"...'
            }
            className="flex-1 px-3 py-2 bg-background border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-primary shadow-sm"
            disabled={loading}
          />
          <button
            onClick={handleRun}
            disabled={loading || !input.trim()}
            className="px-4 py-2 bg-primary text-primary-foreground rounded-md hover:opacity-90 disabled:opacity-50 transition-all shadow-md hover:shadow-lg"
          >
            {loading ? <Loader2 className="w-4 h-4 animate-spin" /> : <Send className="w-4 h-4" />}
          </button>
        </div>
      </div>
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ URL */}
      <WebsiteModal
        isOpen={isWebModalOpen}
        onClose={() => setIsWebModalOpen(false)}
        onSubmit={handleWebsiteParse}
        isLoading={isParsingWebsite}
      />
    </div>
  )
}

