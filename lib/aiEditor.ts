import { fetchWithTimeout } from './fetchWithTimeout'
import { API_TIMEOUTS } from './constants'
import { recognizeIntent } from './intentRecognition'

export async function applyAIEdit(
  htmlContent: string,
  editInstruction: string,
  selectedElement?: { selector: string; innerHTML: string; textContent: string } | null,
  mode: 'free' | 'advanced' | 'pro' = 'free'
): Promise<{ html: string; isContextual: boolean; selector?: string }> {
  try {
    
    // üéØ –ö–û–ù–¢–ï–ö–°–¢–ù–û–ï –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –¥–ª—è –±–æ–ª—å—à–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    let contextForAI = htmlContent
    let isContextualEdit = false
    
    if (selectedElement) {
      // –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤—ã–¥–µ–ª–µ–Ω
      console.log(`üéØ Contextual edit: editing only ${selectedElement.selector}`)
      console.log(`üì¶ Full HTML size: ${htmlContent.length} chars, using element: ${(selectedElement.innerHTML || selectedElement.textContent || '').length} chars`)
      
      contextForAI = selectedElement.innerHTML || selectedElement.textContent || '<div></div>'
      isContextualEdit = true
    }
    
    const prompt = `
–¢—ã –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä HTML —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –≥–ª—É–±–æ–∫–∏–º –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.

${isContextualEdit ? `
üéØ –ö–û–ù–¢–ï–ö–°–¢–ù–û–ï –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï:
–¢—ã –≤–∏–¥–∏—à—å –¢–û–õ–¨–ö–û –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —ç–ª–µ–º–µ–Ω—Ç (${selectedElement?.selector}).
–¢–≤–æ—è –∑–∞–¥–∞—á–∞: –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¢–û–õ–¨–ö–û —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.
` : ''}

–¢–ï–ö–£–©–ò–ô ${isContextualEdit ? '–≠–õ–ï–ú–ï–ù–¢' : 'HTML'}:
${contextForAI}

–ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:
"${editInstruction}"

üß† –ü–û–ù–ò–ú–ê–ù–ò–ï –ò–ù–°–¢–†–£–ö–¶–ò–ò:
- "–≤—Å—Ç–∞–≤—å/–¥–æ–±–∞–≤—å [–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ/—Ñ–æ—Ç–æ] –∏ —Ç–µ–∫—Å—Ç" ‚Üí —Å–æ–∑–¥–∞–π div —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ò —Ç–µ–∫—Å—Ç–æ–º/–æ–ø–∏—Å–∞–Ω–∏–µ–º
- "–≤—Å—Ç–∞–≤—å/–¥–æ–±–∞–≤—å —Ñ–æ—Ç–æ/–∫–∞—Ä—Ç–∏–Ω–∫—É/–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ [–æ–±—ä–µ–∫—Ç–∞]" ‚Üí –≤—Å—Ç–∞–≤—å img —Å IMAGE_PLACEHOLDER
- "–≤—Å—Ç–∞–≤—å/–¥–æ–±–∞–≤—å —Ç–µ–∫—Å—Ç/–æ–ø–∏—Å–∞–Ω–∏–µ [–ø—Ä–æ —á—Ç–æ-—Ç–æ]" ‚Üí –≤—Å—Ç–∞–≤—å –ø–∞—Ä–∞–≥—Ä–∞—Ñ —Å —Ç–µ–∫—Å—Ç–æ–º
- "—Å—é–¥–∞/—Ç—É–¥–∞/–∑–¥–µ—Å—å/–≤ —ç—Ç—É –æ–±–ª–∞—Å—Ç—å" = –≠–¢–û–¢ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
- "—Å–¥–µ–ª–∞–π/–∏–∑–º–µ–Ω–∏ [—Å–≤–æ–π—Å—Ç–≤–æ]" ‚Üí –∏–∑–º–µ–Ω–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π CSS –∏–ª–∏ –∞—Ç—Ä–∏–±—É—Ç
- –ò–∑–≤–ª–µ–∫–∏ –û–ë–™–ï–ö–¢/–¢–ï–ú–£ –∏–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è alt —Ç–µ–∫—Å—Ç–∞ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞

‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û –î–õ–Ø –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô:
- –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä: IMAGE_PLACEHOLDER
- –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π base64, data:image, http://, https://
- –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π https://via.placeholder.com –∏–ª–∏ –¥—Ä—É–≥–∏–µ URL
- –ü—Ä–æ—Å—Ç–æ IMAGE_PLACEHOLDER –≤ src (–±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤, –±–µ–∑ —Å–ª—ç—à–µ–π)

–ü–†–ò–ú–ï–†–´ –ö–û–ú–ê–ù–î:
‚úÖ "–≤—Å—Ç–∞–≤—å —Å—é–¥–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–≥—É—Ä—Ü–∞ –∏ —Ç–µ–∫—Å—Ç –ø—Ä–æ –Ω–µ–≥–æ" ‚Üí 
   <div style="display: flex; gap: 16px; align-items: center;">
     <img src="IMAGE_PLACEHOLDER" alt="fresh cucumber" style="max-width: 200px; height: auto; border-radius: 8px;" />
     <p>–°–≤–µ–∂–∏–π —Ö—Ä—É—Å—Ç—è—â–∏–π –æ–≥—É—Ä–µ—Ü, –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–∞–ª–∞—Ç–æ–≤</p>
   </div>

‚úÖ "–¥–æ–±–∞–≤—å —Å—é–¥–∞ —Ñ–æ—Ç–æ –∫—Ä–æ–ª–∏–∫–∞" ‚Üí 
   <img src="IMAGE_PLACEHOLDER" alt="cute rabbit" style="max-width: 100%; height: auto; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1);" />

‚úÖ "–≤—Å—Ç–∞–≤—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞" ‚Üí 
   <p style="font-size: 16px; line-height: 1.6;">–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏</p>

‚úÖ "—Å–¥–µ–ª–∞–π —Ç–µ–∫—Å—Ç –∫—Ä–∞—Å–Ω—ã–º" ‚Üí –∏–∑–º–µ–Ω–∏ style="color: red"

${isContextualEdit 
  ? '–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç (–±–µ–∑ –æ–±–µ—Ä—Ç–∫–∏ html/body, –±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π).'
  : '–í–µ—Ä–Ω–∏ –ø–æ–ª–Ω—ã–π HTML –¥–æ–∫—É–º–µ–Ω—Ç.'
}`

    // –í—ã–±–∏—Ä–∞–µ–º –º–æ–¥–µ–ª—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
    const aiModel = (mode === 'advanced' || mode === 'pro') 
      ? 'openai/gpt-4o'  // –£–º–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è Advanced –∏ PRO
      : 'google/gemini-2.5-flash-lite'  // –ë—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å –¥–ª—è FREE

    console.log(`ü§ñ AI Editor using model: ${aiModel} (contextual: ${isContextualEdit}, mode: ${mode})`)

    const response = await fetchWithTimeout('/api/openrouter-chat', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        messages: [
          { 
            role: "system", 
            content: `–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ ${isContextualEdit ? '–∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é HTML —ç–ª–µ–º–µ–Ω—Ç–æ–≤' : '—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é HTML –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤'}. –¢—ã –ø–æ–Ω–∏–º–∞–µ—à—å –Ω–∞–º–µ—Ä–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–∏–º–µ–Ω—è–µ—à—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ—á–Ω–æ. –í–æ–∑–≤—Ä–∞—â–∞–π —Ç–æ–ª—å–∫–æ —á–∏—Å—Ç—ã–π HTML –±–µ–∑ markdown —Ä–∞–∑–º–µ—Ç–∫–∏ –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.` 
          },
          { role: "user", content: prompt }
        ],
        model: aiModel,
        temperature: 0.7
      }),
    }, API_TIMEOUTS.DEFAULT)

    if (!response.ok) {
      throw new Error('AI edit request failed')
    }

    const data = await response.json()
    let editedHtml = data.content || contextForAI
    
    // –£–±–∏—Ä–∞–µ–º markdown —Ä–∞–∑–º–µ—Ç–∫—É –µ—Å–ª–∏ AI –≤—Å—ë –∂–µ –µ—ë –¥–æ–±–∞–≤–∏–ª
    editedHtml = editedHtml.replace(/```html\n?/g, '').replace(/```\n?/g, '').trim()
    
    console.log(`‚úÖ AI returned ${editedHtml.length} chars${isContextualEdit ? ' (element only)' : ' (full HTML)'}`)
    
    return {
      html: editedHtml,
      isContextual: isContextualEdit,
      selector: selectedElement?.selector
    }
  } catch (error) {
    console.error('AI Edit Error:', error)
    throw new Error(`–û—à–∏–±–∫–∞ AI —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
export function isEditCommand(message: string): boolean {
  const intent = recognizeIntent(message)
  return intent.action === 'edit'
}

