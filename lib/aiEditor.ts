import { fetchWithTimeout } from './fetchWithTimeout'
import { API_TIMEOUTS } from './constants'

export async function applyAIEdit(
  htmlContent: string,
  editInstruction: string,
  selectedElement?: { selector: string; innerHTML: string; textContent: string } | null
): Promise<string> {
  try {
    
    let contextInfo = ''
    if (selectedElement) {
      contextInfo = `
üéØ –í–´–î–ï–õ–ï–ù–ù–´–ô –≠–õ–ï–ú–ï–ù–¢ (—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π –¢–û–õ–¨–ö–û –µ–≥–æ!):
–°–µ–ª–µ–∫—Ç–æ—Ä: ${selectedElement.selector}
–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç: "${selectedElement.textContent}"

‚ö†Ô∏è –í–ê–ñ–ù–û: –ò–∑–º–µ–Ω–∏ –¢–û–õ–¨–ö–û —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç (${selectedElement.selector}), –ù–ï —Ç—Ä–æ–≥–∞–π –æ—Å—Ç–∞–ª—å–Ω—É—é —á–∞—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞!
`
    }
    
    const prompt = `
–¢—ã —Ä–µ–¥–∞–∫—Ç–æ—Ä HTML –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.${contextInfo}

–¢–ï–ö–£–©–ò–ô HTML:
${htmlContent}

–ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ò–ó–ú–ï–ù–ï–ù–ò–Æ:
${editInstruction}

–ó–ê–î–ê–ß–ê:
–ü—Ä–∏–º–µ–Ω–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫ HTML${selectedElement ? ` (–¢–û–õ–¨–ö–û –∫ —ç–ª–µ–º–µ–Ω—Ç—É ${selectedElement.selector})` : ''} —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –≤–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π HTML –±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.

–í–ê–ñ–ù–û:
- –°–æ—Ö—Ä–∞–Ω–∏ –≤—Å—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–æ–∫—É–º–µ–Ω—Ç–∞
${selectedElement ? `- –ò–∑–º–µ–Ω–∏ –¢–û–õ–¨–ö–û —ç–ª–µ–º–µ–Ω—Ç ${selectedElement.selector}, –æ—Å—Ç–∞–ª—å–Ω–æ–µ –ù–ï —Ç—Ä–æ–≥–∞–π` : '- –ò–∑–º–µ–Ω–∏ —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ —É–∫–∞–∑–∞–Ω–æ –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏'}
- –í–µ—Ä–Ω–∏ –ø–æ–ª–Ω—ã–π HTML –¥–æ–∫—É–º–µ–Ω—Ç
- –ù–ï –¥–æ–±–∞–≤–ª—è–π markdown —Ä–∞–∑–º–µ—Ç–∫—É (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π \`\`\`html)
- –ü—Ä–æ—Å—Ç–æ –≤–µ—Ä–Ω–∏ —á–∏—Å—Ç—ã–π HTML

–ü–†–ò–ú–ï–†–´ –ò–ù–°–¢–†–£–ö–¶–ò–ô:
- "–°–¥–µ–ª–∞–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫—Ä–∞—Å–Ω—ã–º" ‚Üí –∏–∑–º–µ–Ω–∏ color${selectedElement ? ` —ç–ª–µ–º–µ–Ω—Ç–∞ ${selectedElement.selector}` : ' –∑–∞–≥–æ–ª–æ–≤–∫–∞'} –Ω–∞ red
- "–ò–∑–º–µ–Ω–∏ —Ç–µ–∫—Å—Ç –≤ –ø–µ—Ä–≤–æ–º –∞–±–∑–∞—Ü–µ –Ω–∞..." ‚Üí –∑–∞–º–µ–Ω–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ${selectedElement ? ` —ç–ª–µ–º–µ–Ω—Ç–∞ ${selectedElement.selector}` : ' –ø–µ—Ä–≤–æ–≥–æ <p>'}
- "–£–≤–µ–ª–∏—á—å —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞" ‚Üí —É–≤–µ–ª–∏—á—å font-size${selectedElement ? ` —ç–ª–µ–º–µ–Ω—Ç–∞ ${selectedElement.selector}` : ''}
- "–î–æ–±–∞–≤—å —Ç–µ–Ω—å –∫ —Ç–µ–∫—Å—Ç—É" ‚Üí –¥–æ–±–∞–≤—å text-shadow${selectedElement ? ` –∫ —ç–ª–µ–º–µ–Ω—Ç—É ${selectedElement.selector}` : ''}
`

    const response = await fetchWithTimeout('/api/openrouter-chat', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        messages: [
          { 
            role: "system", 
            content: "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é HTML. –ü—Ä–∏–º–µ–Ω—è–π –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ—á–Ω–æ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π —Ç–æ–ª—å–∫–æ —á–∏—Å—Ç—ã–π HTML –±–µ–∑ markdown —Ä–∞–∑–º–µ—Ç–∫–∏." 
          },
          { role: "user", content: prompt }
        ],
        model: "google/gemini-2.5-flash-lite",
        temperature: 0.7
      }),
    }, API_TIMEOUTS.DEFAULT)

    if (!response.ok) {
      throw new Error('AI edit request failed')
    }

    const data = await response.json()
    let editedHtml = data.content || htmlContent
    
    // –£–±–∏—Ä–∞–µ–º markdown —Ä–∞–∑–º–µ—Ç–∫—É –µ—Å–ª–∏ AI –≤—Å—ë –∂–µ –µ—ë –¥–æ–±–∞–≤–∏–ª
    editedHtml = editedHtml.replace(/```html\n?/g, '').replace(/```\n?/g, '').trim()
    
    return editedHtml
  } catch (error) {
    console.error('AI Edit Error:', error)
    throw new Error(`–û—à–∏–±–∫–∞ AI —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
export function isEditCommand(message: string): boolean {
  const lowerMessage = message.toLowerCase()
  
  // –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ - –ù–ï —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
  const creationKeywords = [
    '—Å–æ–∑–¥–∞–π –∫–ø',
    '—Å–æ–∑–¥–∞–π –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ',
    '—Å–æ–∑–¥–∞–π —Å—á—ë—Ç',
    '—Å–æ–∑–¥–∞–π —Å—á–µ—Ç',
    '—Å–æ–∑–¥–∞–π –ø–∏—Å—å–º–æ',
    '—Å–æ–∑–¥–∞–π –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é',
    '—Å–æ–∑–¥–∞–π –ª–æ–≥–æ—Ç–∏–ø',
    '—Å–æ–∑–¥–∞–π –∫–∞—Ä—Ç–æ—á–∫—É',
    '—Å–¥–µ–ª–∞–π –∫–ø',
    '—Å–¥–µ–ª–∞–π –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ',
    '—Å–¥–µ–ª–∞–π —Å—á—ë—Ç',
    '—Å–¥–µ–ª–∞–π —Å—á–µ—Ç',
    '—Å–¥–µ–ª–∞–π –ø–∏—Å—å–º–æ',
    '—Å–¥–µ–ª–∞–π –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é',
    '—Å–¥–µ–ª–∞–π –ª–æ–≥–æ—Ç–∏–ø',
    '—Å–¥–µ–ª–∞–π –∫–∞—Ä—Ç–æ—á–∫—É',
    '—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π',
    '–Ω–∞–ø–∏—à–∏ –∫–ø',
    '–Ω–∞–ø–∏—à–∏ –ø–∏—Å—å–º–æ',
  ]
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ü–ï–†–í–´–ú
  if (creationKeywords.some(keyword => lowerMessage.includes(keyword))) {
    return false
  }
  
  // –ö–æ–º–∞–Ω–¥—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω–∏–µ)
  const editKeywords = [
    '–∏–∑–º–µ–Ω–∏',
    '–ø–æ–º–µ–Ω—è–π',
    '–∑–∞–º–µ–Ω–∏',
    '–¥–æ–±–∞–≤—å –∫',
    '—É–±–µ—Ä–∏',
    '—É–¥–∞–ª–∏',
    '—É–≤–µ–ª–∏—á—å',
    '—É–º–µ–Ω—å—à–∏',
    '—Ä–∞—Å–∫—Ä–∞—Å—å',
    '–ø–æ–∫—Ä–∞—Å—å',
    '–≤—ã–¥–µ–ª–∏',
    '—Å–¥–µ–ª–∞–π –∂–∏—Ä–Ω—ã–º',
    '—Å–¥–µ–ª–∞–π –±–æ–ª—å—à–µ',
    '—Å–¥–µ–ª–∞–π –º–µ–Ω—å—à–µ',
    '—Å–¥–µ–ª–∞–π –∫—Ä–∞—Å–Ω—ã–º',
    '—Å–¥–µ–ª–∞–π —Å–∏–Ω–∏–º',
    '–∂–∏—Ä–Ω—ã–º',
    '–∫—É—Ä—Å–∏–≤–æ–º',
    '–ø–æ–¥—á–µ—Ä–∫–Ω–∏',
    ' —Ü–≤–µ—Ç',
    ' —Ä–∞–∑–º–µ—Ä',
    ' —à—Ä–∏—Ñ—Ç',
    '–æ—Ç—Å—Ç—É–ø',
    '—Ç–µ–Ω—å',
  ]
  
  return editKeywords.some(keyword => lowerMessage.includes(keyword))
}

