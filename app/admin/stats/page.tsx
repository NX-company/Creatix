'use client'

import { useEffect, useState } from 'react'
import Link from 'next/link'
import { ArrowLeft, Loader2, DollarSign, Activity, Users, TrendingUp } from 'lucide-react'
import Logo from '@/components/Logo'

type ProviderStat = {
  provider: string
  _sum: { tokensUsed: number | null; cost: number | null }
  _count: { id: number }
}

type ModelStat = {
  model: string
  _sum: { tokensUsed: number | null; cost: number | null }
  _count: { id: number }
}

type TopUser = {
  userId: string
  email: string
  name: string
  tokensUsed: number
  cost: number
}

type RecentUsage = {
  id: string
  userEmail: string
  userName: string | null
  provider: string
  model: string
  endpoint: string
  tokensUsed: number
  cost: number
  createdAt: Date
}

type Stats = {
  totalUsers: number
  activeUsers: number
  totalProjects: number
  totalCosts: number
  totalTokens: number
  totalRevenue: number
  balance: number
  providerStats: ProviderStat[]
  modelStats: ModelStat[]
  topUsers: TopUser[]
  recentUsage: RecentUsage[]
}

export default function AdminStatsPage() {
  const [stats, setStats] = useState<Stats | null>(null)
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    fetchStats()
  }, [])

  const fetchStats = async () => {
    try {
      const response = await fetch('/api/admin/stats')
      if (response.ok) {
        const data = await response.json()
        setStats(data.stats)
      }
    } catch (error) {
      console.error('Failed to fetch stats:', error)
    } finally {
      setLoading(false)
    }
  }

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <Loader2 className="w-8 h-8 animate-spin" />
      </div>
    )
  }

  if (!stats) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <p className="text-red-500">Failed to load statistics</p>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-background p-8">
      <div className="max-w-7xl mx-auto">
        <div className="flex items-center justify-between mb-8">
          <div className="flex items-center gap-4">
            <Link
              href="/admin"
              className="p-2 hover:bg-card rounded-lg transition"
            >
              <ArrowLeft className="w-6 h-6" />
            </Link>
            <Logo size="md" />
            <div>
              <h1 className="text-3xl font-bold">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞</h1>
              <p className="text-muted-foreground">API —Ç–æ–∫–µ–Ω—ã –∏ –∑–∞—Ç—Ä–∞—Ç—ã</p>
            </div>
          </div>
        </div>

        {/* –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          <div className="bg-card border border-border rounded-xl p-6 shadow-sm">
            <div className="flex items-center gap-4">
              <div className="p-3 bg-blue-500/10 rounded-lg">
                <Activity className="w-6 h-6 text-blue-500" />
              </div>
              <div>
                <p className="text-sm text-muted-foreground">–¢–æ–∫–µ–Ω–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ</p>
                <p className="text-2xl font-bold">{stats.totalTokens.toLocaleString()}</p>
              </div>
            </div>
          </div>

          <div className="bg-card border border-border rounded-xl p-6 shadow-sm">
            <div className="flex items-center gap-4">
              <div className="p-3 bg-red-500/10 rounded-lg">
                <DollarSign className="w-6 h-6 text-red-500" />
              </div>
              <div>
                <p className="text-sm text-muted-foreground">–ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ API</p>
                <p className="text-2xl font-bold text-red-600">${stats.totalCosts.toFixed(4)}</p>
              </div>
            </div>
          </div>

          <div className="bg-card border border-border rounded-xl p-6 shadow-sm">
            <div className="flex items-center gap-4">
              <div className="p-3 bg-green-500/10 rounded-lg">
                <TrendingUp className="w-6 h-6 text-green-500" />
              </div>
              <div>
                <p className="text-sm text-muted-foreground">–ü—Ä–æ–µ–∫—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–æ</p>
                <p className="text-2xl font-bold">{stats.totalProjects}</p>
              </div>
            </div>
          </div>

          <div className="bg-card border border-border rounded-xl p-6 shadow-sm">
            <div className="flex items-center gap-4">
              <div className="p-3 bg-purple-500/10 rounded-lg">
                <Users className="w-6 h-6 text-purple-500" />
              </div>
              <div>
                <p className="text-sm text-muted-foreground">–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
                <p className="text-2xl font-bold">{stats.activeUsers}</p>
                <p className="text-xs text-muted-foreground">–∏–∑ {stats.totalUsers}</p>
              </div>
            </div>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º */}
        <div className="bg-card border border-border rounded-xl p-6 mb-8">
          <h2 className="text-xl font-bold mb-4">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º</h2>
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead>
                <tr className="border-b border-border">
                  <th className="text-left py-3 px-4">–ü—Ä–æ–≤–∞–π–¥–µ—Ä</th>
                  <th className="text-right py-3 px-4">–ó–∞–ø—Ä–æ—Å–æ–≤</th>
                  <th className="text-right py-3 px-4">–¢–æ–∫–µ–Ω–æ–≤</th>
                  <th className="text-right py-3 px-4">–ó–∞—Ç—Ä–∞—Ç—ã</th>
                </tr>
              </thead>
              <tbody>
                {stats.providerStats.map((stat) => (
                  <tr key={stat.provider} className="border-b border-border hover:bg-muted/50">
                    <td className="py-3 px-4 font-medium">{stat.provider}</td>
                    <td className="text-right py-3 px-4">{stat._count.id}</td>
                    <td className="text-right py-3 px-4">{(stat._sum.tokensUsed || 0).toLocaleString()}</td>
                    <td className="text-right py-3 px-4 text-red-600">${(stat._sum.cost || 0).toFixed(4)}</td>
                  </tr>
                ))}
                {stats.providerStats.length === 0 && (
                  <tr>
                    <td colSpan={4} className="text-center py-8 text-muted-foreground">
                      –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ API
                    </td>
                  </tr>
                )}
              </tbody>
            </table>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–æ–¥–µ–ª—è–º */}
        <div className="bg-card border border-border rounded-xl p-6 mb-8">
          <h2 className="text-xl font-bold mb-4">ü§ñ –¢–æ–ø-10 –º–æ–¥–µ–ª–µ–π –ø–æ –∑–∞—Ç—Ä–∞—Ç–∞–º</h2>
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead>
                <tr className="border-b border-border">
                  <th className="text-left py-3 px-4">–ú–æ–¥–µ–ª—å</th>
                  <th className="text-right py-3 px-4">–ó–∞–ø—Ä–æ—Å–æ–≤</th>
                  <th className="text-right py-3 px-4">–¢–æ–∫–µ–Ω–æ–≤</th>
                  <th className="text-right py-3 px-4">–ó–∞—Ç—Ä–∞—Ç—ã</th>
                </tr>
              </thead>
              <tbody>
                {stats.modelStats.map((stat) => (
                  <tr key={stat.model} className="border-b border-border hover:bg-muted/50">
                    <td className="py-3 px-4 font-medium text-sm">{stat.model}</td>
                    <td className="text-right py-3 px-4">{stat._count.id}</td>
                    <td className="text-right py-3 px-4">{(stat._sum.tokensUsed || 0).toLocaleString()}</td>
                    <td className="text-right py-3 px-4 text-red-600">${(stat._sum.cost || 0).toFixed(4)}</td>
                  </tr>
                ))}
                {stats.modelStats.length === 0 && (
                  <tr>
                    <td colSpan={4} className="text-center py-8 text-muted-foreground">
                      –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –º–æ–¥–µ–ª–µ–π
                    </td>
                  </tr>
                )}
              </tbody>
            </table>
          </div>
        </div>

        {/* –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∑–∞—Ç—Ä–∞—Ç–∞–º */}
        <div className="bg-card border border-border rounded-xl p-6 mb-8">
          <h2 className="text-xl font-bold mb-4">üë• –¢–æ–ø-10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∑–∞—Ç—Ä–∞—Ç–∞–º</h2>
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead>
                <tr className="border-b border-border">
                  <th className="text-left py-3 px-4">Email</th>
                  <th className="text-left py-3 px-4">–ò–º—è</th>
                  <th className="text-right py-3 px-4">–¢–æ–∫–µ–Ω–æ–≤</th>
                  <th className="text-right py-3 px-4">–ó–∞—Ç—Ä–∞—Ç—ã</th>
                </tr>
              </thead>
              <tbody>
                {stats.topUsers.map((user) => (
                  <tr key={user.userId} className="border-b border-border hover:bg-muted/50">
                    <td className="py-3 px-4 text-sm">{user.email}</td>
                    <td className="py-3 px-4">{user.name || '-'}</td>
                    <td className="text-right py-3 px-4">{user.tokensUsed.toLocaleString()}</td>
                    <td className="text-right py-3 px-4 text-red-600">${user.cost.toFixed(4)}</td>
                  </tr>
                ))}
                {stats.topUsers.length === 0 && (
                  <tr>
                    <td colSpan={4} className="text-center py-8 text-muted-foreground">
                      –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
                    </td>
                  </tr>
                )}
              </tbody>
            </table>
          </div>
        </div>

        {/* –ü–æ—Å–ª–µ–¥–Ω–∏–µ 100 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 7 –¥–Ω–µ–π */}
        <div className="bg-card border border-border rounded-xl p-6">
          <h2 className="text-xl font-bold mb-4">üìà –ü–æ—Å–ª–µ–¥–Ω–∏–µ 100 API –∑–∞–ø—Ä–æ—Å–æ–≤ (–∑–∞ 7 –¥–Ω–µ–π)</h2>
          <div className="overflow-x-auto">
            <table className="w-full text-sm">
              <thead>
                <tr className="border-b border-border">
                  <th className="text-left py-3 px-2">–î–∞—Ç–∞</th>
                  <th className="text-left py-3 px-2">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</th>
                  <th className="text-left py-3 px-2">–ü—Ä–æ–≤–∞–π–¥–µ—Ä</th>
                  <th className="text-left py-3 px-2">–ú–æ–¥–µ–ª—å</th>
                  <th className="text-right py-3 px-2">–¢–æ–∫–µ–Ω—ã</th>
                  <th className="text-right py-3 px-2">–ó–∞—Ç—Ä–∞—Ç—ã</th>
                </tr>
              </thead>
              <tbody>
                {stats.recentUsage.map((usage) => (
                  <tr key={usage.id} className="border-b border-border hover:bg-muted/50">
                    <td className="py-2 px-2 text-xs">
                      {new Date(usage.createdAt).toLocaleString('ru-RU', {
                        day: '2-digit',
                        month: '2-digit',
                        hour: '2-digit',
                        minute: '2-digit'
                      })}
                    </td>
                    <td className="py-2 px-2 text-xs">{usage.userEmail}</td>
                    <td className="py-2 px-2">{usage.provider}</td>
                    <td className="py-2 px-2 text-xs">{usage.model}</td>
                    <td className="text-right py-2 px-2">{usage.tokensUsed.toLocaleString()}</td>
                    <td className="text-right py-2 px-2 text-red-600">${usage.cost.toFixed(4)}</td>
                  </tr>
                ))}
                {stats.recentUsage.length === 0 && (
                  <tr>
                    <td colSpan={6} className="text-center py-8 text-muted-foreground">
                      –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
                    </td>
                  </tr>
                )}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  )
}

