'use client'

import { useEffect, useState } from 'react'
import { useSearchParams, useRouter } from 'next/navigation'
import { useSession } from 'next-auth/react'
import { CheckCircle, Loader2, AlertCircle } from 'lucide-react'

export const dynamic = 'force-dynamic'

export default function PaymentSuccessPage() {
  const searchParams = useSearchParams()
  const router = useRouter()
  const { update: updateSession } = useSession()
  const [countdown, setCountdown] = useState(5) // –£–≤–µ–ª–∏—á–µ–Ω–æ –¥–æ 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è
  const [activationStatus, setActivationStatus] = useState<'pending' | 'success' | 'error'>('pending')
  const [activationMessage, setActivationMessage] = useState('')
  const [pollingAttempts, setPollingAttempts] = useState(0)

  const paymentType = searchParams.get('type')
  const mode = searchParams.get('mode')

  // –õ–æ–≥–∏—Ä—É–µ–º –í–°–ï –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å —á—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç –æ—Ç –¢–æ—á–∫–∞ –ë–∞–Ω–∫–∞
  console.log('üîç All URL params from Tochka Bank:', Object.fromEntries(searchParams.entries()))

  // –¢–æ—á–∫–∞ –±–∞–Ω–∫ –º–æ–∂–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å operationId –≤ —Ä–∞–∑–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
  const operationId = searchParams.get('operationId') ||
                     searchParams.get('uuid') ||
                     searchParams.get('orderId') ||
                     searchParams.get('transactionId') ||
                     searchParams.get('payment_id') ||
                     searchParams.get('id')

  console.log('üÜî Extracted operationId:', operationId)

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  useEffect(() => {
    if (!operationId) {
      console.log('‚ö†Ô∏è No operationId found in URL parameters')
      setActivationStatus('error')
      setActivationMessage('–ü–ª–∞—Ç—ë–∂ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. –ì–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.')
      return
    }

    const activatePayment = async () => {
      try {
        console.log(`üîÑ Activating payment with operationId: ${operationId}`)

        const response = await fetch('/api/payments/complete-payment', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ operationId }),
        })

        const data = await response.json()
        console.log('üì• Response from complete-payment:', data)

        if (response.ok && data.success) {
          console.log('‚úÖ Payment activated successfully via client-side:', data)
          setActivationStatus('success')

          // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
          let message = ''
          if (paymentType === 'subscription') {
            const modeText = mode === 'ADVANCED' ? 'ADVANCED' : mode === 'PRO' ? 'PRO' : mode
            message = `–ü–æ–¥–ø–∏—Å–∫–∞ ${modeText} —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!`
          } else if (paymentType === 'bonus_pack') {
            message = '+30 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç!'
          } else {
            message = data.message || '–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!'
          }
          setActivationMessage(message)

          // –û–±–Ω–æ–≤–ª—è–µ–º NextAuth —Å–µ—Å—Å–∏—é
          try {
            await updateSession()
            console.log('‚úÖ Session updated')
          } catch (sessionError) {
            console.error('‚ö†Ô∏è Failed to update session:', sessionError)
          }
        } else {
          console.log('‚è≥ Client-side activation pending, starting polling...')
          // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É —Å—Ä–∞–∑—É, –∑–∞–ø—É—Å–∫–∞–µ–º polling
        }
      } catch (error) {
        console.error('‚ö†Ô∏è Client-side activation failed, will rely on webhook + polling:', error)
        // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º polling
      }
    }

    activatePayment()
  }, [operationId, paymentType, mode, updateSession])

  // Polling: –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
  useEffect(() => {
    if (!operationId) return
    if (activationStatus === 'success') return // –£–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ
    if (pollingAttempts >= 10) { // –ú–∞–∫—Å–∏–º—É–º 10 –ø–æ–ø—ã—Ç–æ–∫ (30 —Å–µ–∫—É–Ω–¥)
      console.log('‚è±Ô∏è Polling timeout reached')
      setActivationStatus('error')
      setActivationMessage('–ü–ª–∞—Ç—ë–∂ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. –ì–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –º–∏–Ω—É—Ç—ã.')
      return
    }

    const pollInterval = setInterval(async () => {
      try {
        console.log(`üîç Polling attempt ${pollingAttempts + 1}/10`)

        const response = await fetch(`/api/payments/check-status?operationId=${operationId}`)
        const data = await response.json()

        if (data.found && data.transaction.status === 'COMPLETED') {
          console.log('‚úÖ Payment activated successfully via webhook!')
          setActivationStatus('success')

          // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
          let message = ''
          if (paymentType === 'subscription') {
            const modeText = mode === 'ADVANCED' ? 'ADVANCED' : mode === 'PRO' ? 'PRO' : mode
            message = `–ü–æ–¥–ø–∏—Å–∫–∞ ${modeText} —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!`
          } else if (paymentType === 'bonus_pack') {
            message = '+30 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç!'
          } else {
            message = '–ü–ª–∞—Ç—ë–∂ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!'
          }
          setActivationMessage(message)

          // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Å—Å–∏—é
          try {
            await updateSession()
            console.log('‚úÖ Session updated after polling')
          } catch (sessionError) {
            console.error('‚ö†Ô∏è Failed to update session:', sessionError)
          }

          clearInterval(pollInterval)
        } else {
          setPollingAttempts(prev => prev + 1)
        }
      } catch (error) {
        console.error('‚ö†Ô∏è Polling error:', error)
        setPollingAttempts(prev => prev + 1)
      }
    }, 3000) // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã

    return () => clearInterval(pollInterval)
  }, [operationId, activationStatus, pollingAttempts, paymentType, mode, updateSession])

  useEffect(() => {
    // –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ (—Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏)
    if (activationStatus === 'pending') return

    const timer = setInterval(() => {
      setCountdown((prev) => {
        if (prev <= 1) {
          clearInterval(timer)
          router.push('/')
          return 0
        }
        return prev - 1
      })
    }, 1000)

    return () => clearInterval(timer)
  }, [router, activationStatus])

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 flex items-center justify-center p-4">
      <div className="max-w-md w-full bg-white rounded-2xl shadow-xl p-8 text-center">
        {/* –ò–∫–æ–Ω–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ */}
        <div className="mb-6 flex justify-center">
          {activationStatus === 'pending' && (
            <div className="w-20 h-20 bg-blue-100 rounded-full flex items-center justify-center">
              <Loader2 className="w-12 h-12 text-blue-600 animate-spin" />
            </div>
          )}
          {activationStatus === 'success' && (
            <div className="w-20 h-20 bg-green-100 rounded-full flex items-center justify-center animate-bounce">
              <CheckCircle className="w-12 h-12 text-green-600" />
            </div>
          )}
          {activationStatus === 'error' && (
            <div className="w-20 h-20 bg-yellow-100 rounded-full flex items-center justify-center">
              <AlertCircle className="w-12 h-12 text-yellow-600" />
            </div>
          )}
        </div>

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <h1 className="text-3xl font-bold text-gray-900 mb-4">
          {activationStatus === 'pending' && '–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞...'}
          {activationStatus === 'success' && '–ì–æ—Ç–æ–≤–æ!'}
          {activationStatus === 'error' && '–ü–ª–∞—Ç—ë–∂ –ø–æ–ª—É—á–µ–Ω'}
        </h1>

        {/* –°–æ–æ–±—â–µ–Ω–∏–µ */}
        <p className="text-lg text-gray-700 mb-6">
          {activationStatus === 'pending' && '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...'}
          {activationStatus === 'success' && activationMessage}
          {activationStatus === 'error' && activationMessage}
        </p>

        {/* –î–µ—Ç–∞–ª–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ */}
        {activationStatus === 'success' && (
          <div className="bg-green-50 border border-green-200 rounded-lg p-4 mb-6">
            {paymentType === 'subscription' && (
              <>
                <p className="text-sm font-semibold text-green-700 mb-1">
                  –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞
                </p>
                <p className="text-sm text-gray-600">
                  –ú–µ—Å—è—á–Ω—ã–π –ª–∏–º–∏—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–π —Å–±—Ä–æ—à–µ–Ω. –ú–æ–∂–µ—Ç–µ –Ω–∞—á–∏–Ω–∞—Ç—å —Ä–∞–±–æ—Ç—É!
                </p>
              </>
            )}
            {paymentType === 'bonus_pack' && (
              <>
                <p className="text-sm font-semibold text-green-700 mb-1">
                  –ë–æ–Ω—É—Å–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã
                </p>
                <p className="text-sm text-gray-600">
                  +30 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                </p>
              </>
            )}
          </div>
        )}

        {/* –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ/–∑–∞–¥–µ—Ä–∂–∫–µ */}
        {activationStatus === 'error' && (
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
            <p className="text-sm text-gray-600">
              {activationMessage}
            </p>
          </div>
        )}

        {/* –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç (—Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –Ω–µ pending) */}
        {activationStatus !== 'pending' && countdown > 0 && (
          <div className="flex items-center justify-center gap-2 text-gray-500 mb-4">
            <Loader2 className="w-4 h-4 animate-spin" />
            <p className="text-sm">
              –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —á–µ—Ä–µ–∑ {countdown} —Å–µ–∫...
            </p>
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <div className="flex flex-col gap-3">
          <button
            onClick={() => router.push('/')}
            disabled={activationStatus === 'pending'}
            className="w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white font-semibold py-3 px-6 rounded-lg transition-all duration-200 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
          >
            {activationStatus === 'pending' ? '–ê–∫—Ç–∏–≤–∞—Ü–∏—è...' : '–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤'}
          </button>

          {/* –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞ —Ç–∞–π–º–µ—Ä–∞ */}
          {activationStatus === 'success' && countdown > 0 && (
            <button
              onClick={() => setCountdown(0)}
              className="text-sm text-gray-500 hover:text-gray-700 underline transition-colors"
            >
              –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ–∂–∏–¥–∞–Ω–∏–µ
            </button>
          )}
        </div>
      </div>
    </div>
  )
}
